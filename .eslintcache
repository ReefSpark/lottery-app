[{"/root/Documents/lottery-app/src/Component/login.js":"1","/root/Documents/lottery-app/src/Component/tablePagation/purchaseCalculation.js":"2","/root/Documents/lottery-app/src/Component/viewCalculation.js":"3","/root/Documents/lottery-app/src/Component/purchase-ticket.js":"4","/root/Documents/lottery-app/src/Component/manage-ticket.js":"5","/root/Documents/lottery-app/src/App.js":"6","/root/Documents/lottery-app/src/Component/Dasdboard.js":"7","/root/Documents/lottery-app/src/Component/tablePagation/searchPagenation.js":"8","/root/Documents/lottery-app/src/Component/tablePagation/manageTicketPagenation.js":"9","/root/Documents/lottery-app/src/Component/header.js":"10","/root/Documents/lottery-app/src/Component/tablePagation/searchManageTicket.js":"11","/root/Documents/lottery-app/src/Component/viewTickets.js":"12","/root/Documents/lottery-app/src/Component/user.js":"13","/root/Documents/lottery-app/src/Component/viewUsers.js":"14","/root/Documents/lottery-app/src/history.js":"15"},{"size":3314,"mtime":1611690001420,"results":"16","hashOfConfig":"17"},{"size":11661,"mtime":1611731284748,"results":"18","hashOfConfig":"17"},{"size":1034,"mtime":1611724843592,"results":"19","hashOfConfig":"17"},{"size":10031,"mtime":1611732776504,"results":"20","hashOfConfig":"17"},{"size":9820,"mtime":1611691894872,"results":"21","hashOfConfig":"17"},{"size":1558,"mtime":1611723408996,"results":"22","hashOfConfig":"17"},{"size":7424,"mtime":1611731876440,"results":"23","hashOfConfig":"17"},{"size":8341,"mtime":1611499830512,"results":"24","hashOfConfig":"17"},{"size":8811,"mtime":1611424236372,"results":"25","hashOfConfig":"17"},{"size":2651,"mtime":1611732711216,"results":"26","hashOfConfig":"17"},{"size":9346,"mtime":1611498750720,"results":"27","hashOfConfig":"17"},{"size":1431,"mtime":1611428201536,"results":"28","hashOfConfig":"17"},{"size":6856,"mtime":1611499053988,"results":"29","hashOfConfig":"17"},{"size":1431,"mtime":1611498861428,"results":"30","hashOfConfig":"17"},{"size":106,"mtime":1610457392000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17s6qvr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/Documents/lottery-app/src/Component/login.js",["67","68"],"/root/Documents/lottery-app/src/Component/tablePagation/purchaseCalculation.js",["69","70","71","72","73","74","75","76","77","78","79"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Axios from 'axios';\n// popup\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment-timezone';\n\nconst URL = `${process.env.REACT_APP_API_BASE_URL}`;\n//popup\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst columns = [\n\n    { id: 'ticket_name', label: 'Name', minWidth: 100, align: 'center' },\n    {\n        id: 'actual_price',\n        label: 'Actual Price',\n        minWidth: 100,\n        align: 'center'\n    },\n    { id: 'ticket_number', label: 'Ticket Number', minWidth: 100, align: 'center' },\n    {\n        id: 'sell_price',\n        label: 'Sell Price',\n        minWidth: 100,\n        align: 'center'\n    },\n    {\n        id: 'show_time',\n        label: 'Show Time',\n        minWidth: 100,\n        align: 'center'\n    },\n    {\n        id: 'date',\n        label: 'Create Date',\n        minWidth: 100,\n        align: 'center'\n    }\n];\nconst ticketColumns = [\n    { id: 'combination', label: 'Combination', minWidth: 100 },\n    { id: 'prize', label: 'Prize', minWidth: 100, },\n    { id: 'sell_price', label: 'Sell Price', minWidth: 100, }\n]\nconst useStyles = makeStyles({\n    root: {\n        width: '80%',\n        margin: `3% 0 0 10%`,\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\nconst dateObj = new Date();\nconst month = dateObj.getUTCMonth() + 1; //months from 1-12\nconst day = dateObj.getUTCDate();\nconst year = dateObj.getUTCFullYear();\n\nconst newdate = year + \"-\" + month + \"-\" + day;\n\nexport default function StickyHeadTable(props) {\n    console.log('Props:',{props})\n    const classes = useStyles();\n    const [rows, setRow] = React.useState([])\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [responseData,setResponseDate]=React.useState([])\n    // popup\n    const [editData, setEditData] = React.useState({});\n    const [readOnly, setReadOnly] = React.useState(true);\n    const [open, setOpen] = React.useState(false);\n    const [tickets, setTickets] = React.useState([]);\n    const [ticketLoading, setTicketLoading] = React.useState(false);\n    // popup\n    const handleClose = () => {\n        setOpen(false);\n        setTicketLoading(false);\n        setTickets([])\n        setReadOnly(true)\n    };\n    // component did mount\n    useEffect(async () => {\n        let { data } = await Axios.get(`${URL}/api/v1/purchase/purchase-calculation?user=${props.user}&date=${newdate}`);\n        // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${page}&limit=${rowsPerPage}`);\n       \n        setRowsPerPage(+rowsPerPage);\n        setResponseDate(data)\n        setRow(data.purchase);\n    }, []);\n    // our custom function\n    const userPagination = async (event, something) => {\n        let { data } = await Axios.get(`${URL}/api/v1/purchase/purchase-calculation?user=${props.user}&date=${newdate}`);\n        // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${something}&limit=${rowsPerPage}`);\n        setRow(data.purchase);\n        setRowsPerPage(+rowsPerPage);\n        setResponseDate(data)\n        setPage(something);\n    }\n    // it call whenever rowsperpage changes\n    useEffect(() => {\n        userPagination(rowsPerPage, 0)\n    }, [rowsPerPage]);\n    // popup\n\n    const getTicket = async (a) => {\n        setTicketLoading(true)\n        console.log(responseData.winningTicket)\n        setTickets(responseData.winningTicket);\n        setTicketLoading(false);\n    }\n    function rowClick(a) {\n        console.log(a);\n        // setEditData(a);\n        getTicket(a)\n        setOpen(true);\n    }\n    // popup\n    const changeReadonly = () => {\n        setReadOnly(false)\n    }\n    // change rows per page\n    const handleChangeRowsPerPage = async (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    return (\n        // const classes = useStyles();\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow selected={true}>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column._id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? value : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 20, 25, 100]} // we can set whatever we want\n                component=\"div\"\n                count={29} // !! important ---> need to set total count of records\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={userPagination} // our custom function (NEXT, PREV) button\n                onChangeRowsPerPage={handleChangeRowsPerPage} // rows per page function\n            />\n\n            {/* popup start */}\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                disableBackdropClick={true}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Winning Tickets\"}</DialogTitle>\n                <DialogContent>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow selected={true}>\n                                {ticketColumns.map((column) => (\n                                    <TableCell\n                                        key={column._id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/* {tickets.length > 0} */}\n                            {tickets.length > 0 ? tickets.map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                                        {ticketColumns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    {column.format && typeof value === 'number' ? value : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            }) : <TableRow>\n                                    <TableCell>  </TableCell>\n                                    <TableCell style={{ textAlign: 'center' }}> No Data </TableCell>\n                                    <TableCell>  </TableCell>\n                                </TableRow>}\n                        </TableBody>\n                    </Table>\n                    {/* <form className={classes.container}  >\n            <TextField\n              name={'email'}\n              value={editData.email}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            /> <br />\n            <TextField\n              name={'name'}\n              value={editData.name}\n              InputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            />\n          </form> */}\n                </DialogContent>\n                <DialogActions>\n                    {/* <Button onClick={() => updateUser({ ...editData })} color=\"primary\">\n            Update\n          </Button> */}\n                    {/* <Button onClick={changeReadonly} color=\"primary\">\n            Edit\n          </Button> */}\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n          </Button>\n                </DialogActions>\n            </Dialog>\n            {/* popup end */}\n            <div className=\"row\">\n                {console.log(\"data:\",responseData)}\n                <div className=\"col\">\n                    <label className=\"form-label\" >Excess Amount : {responseData.excessAmount} </label>\n                </div>\n                <div className=\"col\">\n                    <label className=\"form-label\" >Winning Amount : {responseData.winningAmount} </label>\n                </div>\n                <div className=\"col\">\n                    <label className=\"form-label\" >Ticket Price : {responseData.ticketPrice}</label>\n                </div>\n                <div className=\"col\">\n                    <label className=\"form-label\" >Total : {responseData.total}</label>\n                </div>\n\n            </div>\n        </Paper>\n    );\n}","/root/Documents/lottery-app/src/Component/viewCalculation.js",["80","81"],"import React, { Component } from 'react'\nimport Pagenation from './tablePagation/purchaseCalculation'\nimport '../Component/style-sheet/tableStyle.css'\nimport history from '../history';\nimport queryString from 'query-string';\nclass ViewTickets extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    backSumbit = () => {\n        history.push('/purchase-ticket');\n    }\n\n    render() {\n        const parsed = queryString.parse(window.location.search);\n        return (\n            <div>\n                <div className=\"user-list-search\">\n                    <input type=\"submit\" style={{ \"backgroundColor\": \"black\", color: \"white\", width: \"20%\" }} id=\"form8Example3\" className=\"form-control search-button-controll\" value=\"Back\" onClick={this.backSumbit} />\n                    <h3 className=\"search-text\">Purchase Calculation</h3>\n                    <h1></h1>\n                </div>\n                <Pagenation user={parsed.name} />\n                \n            </div>\n        )\n    }\n}\nexport default ViewTickets\n","/root/Documents/lottery-app/src/Component/purchase-ticket.js",["82","83","84","85","86","87"],"/root/Documents/lottery-app/src/Component/manage-ticket.js",["88","89","90","91","92"],"import React, { Component } from 'react'\nimport _ from 'lodash';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Axios from 'axios'\nimport './style-sheet/manage-tickets.css'\nimport history from '../history';\nclass ManageTicket extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ticketName: '',\n            price: 0,\n            quantity: 1,\n            ticketNumber: [],\n            ticketNumberPrice: [],\n            ticketNumberError: '',\n            ticketNumberPriceError: '',\n            ticketNameError: '',\n            priceError: '',\n            values: [{}],\n            pagenation: true,\n\n        }\n        this.fieldsArray = [];\n        this.inc = 0;\n    }\n    handleNameText = event => {\n        this.setState({ ticketName: event.target.value, quantity: 0 })\n    }\n    handlePriceText = event => {\n        this.setState({ price: event.target.value, quantity: 0 })\n    }\n    handleQuantitySelection = event => {\n        this.setState({ quantity: event.target.value })\n        this.loopTextFields(event.target.value)\n    }\n    handleText = (i, event) => {\n        this.state.ticketNumber[i] = event.target.value.toUpperCase()\n        this.setState({ ticketNumber: this.state.ticketNumber, quantity: 0 })\n    }\n\n    handleTicketNumberPrice = (i, event) => {\n        this.state.ticketNumberPrice[i] = event.target.value.toUpperCase()\n        this.setState({ ticketNumberPrice: this.state.ticketNumberPrice, quantity: 0 })\n    }\n    removeSumbit = () => {\n        this.fieldsArray.splice(this.fieldsArray - 1, 1)\n        this.setState({ quantity: 0 })\n    }\n    // componentWillUpdate(){\n    //     this.setState({quantity:0})\n    // }\n    validate = () => {\n        let ticketNumberError = '', ticketNumberPriceError = '', ticketNameError = '', priceError = ''\n\n        if (this.state.ticketName === '') {\n            ticketNameError = \"Ticket name cannot be blank\"\n        }\n        if (this.state.price === 0) {\n            priceError = \"Price cannot be blank\"\n        }\n        if (ticketNameError || priceError) {\n            this.setState({ ticketNumberError: ticketNumberError, ticketNumberPriceError: ticketNumberPriceError, ticketNameError: ticketNameError, priceError: priceError });\n            return false\n        }\n        return true\n    }\n    viewTicket = () => {\n        history.push('/view-ticket')\n    }\n    addItem = () => {\n        this.setState({ quantity: 1 })\n        this.loopTextFields(1);\n    }\n    removeSumbit = () => {\n        this.fieldsArray.splice(this.fieldsArray.length - 1, 1)\n        this.setState({})\n    }\n    purchaseSumbit = () => {\n        this.setState({ quantity: 0 })\n        const isValid = this.validate();\n        if (this.inc == 0) {\n            toast.error(\"Please Add Ticket Combination\");\n        }\n        if (isValid) {\n\n            let i = 0;\n            let ticketNumberCount = this.state.ticketNumber\n            let ticketNumberPriceCount = this.state.ticketNumberPrice\n            while (i < ticketNumberCount.length) {\n                this.state.values[i] = {\n                    combination: ticketNumberCount[i].toUpperCase(),\n                    prize: Number(ticketNumberPriceCount[i]),\n                }\n                this.setState({ values: this.state.values })\n                i++\n            }\n            let data = Object.assign({\n                data: {\n                    attributes: [\n                        { name: this.state.ticketName.toUpperCase(), price: Number(this.state.price) },\n                        this.state.values]\n\n                }\n            });\n            return Axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/v1/master`, data).then((response) => {\n                if (response.status === 200)\n                    this.setState({ message: response.data.data.attributes.message, pagenation: false })\n                toast.success(this.state.message);\n            }).catch((err) => {\n                if (err.response.status === 400) {\n                    this.setState({ message: err.response.data.data.attributes.message })\n                    return toast.error(this.state.message);\n                }\n            });\n        }\n    }\n    loopTextFields(count) {\n        for (let i = 0; i < count; i++) {\n            this.fieldsArray.push(\n                // <div className=\"row \" style={{padding:\"2%\"}}>\n                //     <div className=\"col\">\n                //         <div className=\"form-outline\">\n                //             \n                //         </div>\n                //     </div>\n                //     <div className=\"col\">\n                //         <div className=\"form-outline\">\n                //             <input type=\"email\" id=\"form8Example2\" className=\"form-control\" onChange={this.handleTicketNumberPrice.bind(this, this.inc)} />\n                //             {this.state.ticketNumberPriceError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                //                 {this.state.ticketNumberPriceError}\n                //             </div>)}\n                //         </div>\n                //     </div>\n                // </div>\n                <div className=\"loop-array\" >\n                    <input type=\"text\" id=\"form8Example1\" className=\"form-control\" style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} onChange={this.handleText.bind(this, this.inc)} />\n                    {this.state.ticketNumberError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                        {this.state.ticketNumberError}\n                    </div>)}\n                    <input type=\"text\" id=\"form8Example2\" className=\"form-control\"  style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} onChange={this.handleTicketNumberPrice.bind(this, this.inc)} />\n                    {this.state.ticketNumberPriceError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                        {this.state.ticketNumberPriceError}\n                    </div>)}\n                    <button className=\"btn  user-button\" style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} onClick={this.removeSumbit}>Remove </button>\n                </div>\n            );\n            this.inc++;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 style={{ \"marginTop\": \"3%\" }}>Add Ticket Name</h3>\n                <div className=\"user-form\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-outline\">\n                                <label className=\"form-label\" >Ticket Name *</label>\n                                <input type=\"text\" id=\"form8Example1\" className=\"form-control\" onChange={this.handleNameText} />\n                                {this.state.ticketNameError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                                    {this.state.ticketNameError}\n                                </div>)}\n                            </div>\n                        </div>\n                        <div className=\"col\">\n\n                            <div className=\"form-outline\">\n                                <label className=\"form-label\">Price *</label>\n                                <input type=\"email\" id=\"form8Example2\" className=\"form-control\" onChange={this.handlePriceText} />\n                                {this.state.priceError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                                    {this.state.priceError}\n                                </div>)}\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <label className=\"form-label\"> Ticket Number Quantity*</label>\n                            <input type=\"text\" id=\"form8Example1\" className=\"form-control\" onChange={this.handleQuantitySelection} />\n                        </div>\n                    </div>\n                    <br></br>\n\n                    <div className=\"purchase-ticket-form\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <label className=\"form-label\" >Ticket Number *</label>\n                            </div>\n\n                            <div className=\"col\">\n                                <label className=\"form-label\" >Prize *</label>\n                            </div>\n\n                        </div>\n                        <div>\n                            {this.fieldsArray}\n                        </div>\n\n                    </div>\n                    <div className=\"button-ticket\">\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.purchaseSumbit}>Add Ticket Name</button>\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.viewTicket}>View Ticket</button>\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.addItem}>Add Action</button>\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.removeSumbit}>Remove Action</button>\n                    </div>\n                    < ToastContainer\n                        position=\"top-right\"\n                        autoClose={3000} />\n                    <div className=\"seprate-line\">\n                    </div>\n                    <br></br>\n                    {/* <h4>Ticket Master List</h4>\n                    <Pagenation callChild={this.state.pagenation} /> */}\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default ManageTicket","/root/Documents/lottery-app/src/App.js",["93"],"\nimport './App.css';\nimport Login from './Component/login'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport history from './history';\nimport Dashboard from './Component/header'\nimport ViewTicket from './Component/viewTickets'\nimport ViewUsers from './Component/viewUsers'\nimport ViewCalculation from './Component/viewCalculation.js'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Dashboard/> */}\n      <Switch>\n        <Router history={history}>\n          {/* <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return (\n                      !localStorage.getItem('token') ?\n                      <Redirect to=\"/login\" /> :\n                      <Redirect to=\"/dashboard\" /> \n                    )\n                }}\n              /> */}\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/users\" component={Dashboard} />\n          <Route exact path=\"/manage-tickets\" component={Dashboard} />\n          <Route exact path=\"/purchase-ticket\" component={Dashboard} />\n          <Route exact path=\"/view-users\" component={ViewUsers} />\n          <Route exact path=\"/view-ticket\" component={ViewTicket} />\n          <Route exact path=\"/purchase-calculation\" component={ViewCalculation} />\n        </Router>\n      </Switch>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","/root/Documents/lottery-app/src/Component/Dasdboard.js",["94","95","96","97"],"/root/Documents/lottery-app/src/Component/tablePagation/searchPagenation.js",["98","99","100","101","102","103","104"],"/root/Documents/lottery-app/src/Component/tablePagation/manageTicketPagenation.js",["105","106","107","108","109","110","111","112","113","114"],"/root/Documents/lottery-app/src/Component/header.js",[],"/root/Documents/lottery-app/src/Component/tablePagation/searchManageTicket.js",["115","116","117","118","119","120","121","122","123","124","125","126","127"],"/root/Documents/lottery-app/src/Component/viewTickets.js",[],["128","129"],"/root/Documents/lottery-app/src/Component/user.js",[],"/root/Documents/lottery-app/src/Component/viewUsers.js",[],"/root/Documents/lottery-app/src/history.js",[],{"ruleId":"130","severity":1,"message":"131","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":11},{"ruleId":"130","severity":1,"message":"134","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":15},{"ruleId":"130","severity":1,"message":"135","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":20,"column":8,"nodeType":"132","messageId":"133","endLine":20,"endColumn":17},{"ruleId":"130","severity":1,"message":"137","line":21,"column":8,"nodeType":"132","messageId":"133","endLine":21,"endColumn":14},{"ruleId":"130","severity":1,"message":"138","line":86,"column":12,"nodeType":"132","messageId":"133","endLine":86,"endColumn":20},{"ruleId":"130","severity":1,"message":"139","line":86,"column":22,"nodeType":"132","messageId":"133","endLine":86,"endColumn":33},{"ruleId":"130","severity":1,"message":"140","line":87,"column":12,"nodeType":"132","messageId":"133","endLine":87,"endColumn":20},{"ruleId":"130","severity":1,"message":"141","line":90,"column":12,"nodeType":"132","messageId":"133","endLine":90,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":99,"column":15,"nodeType":"144","endLine":106,"endColumn":6},{"ruleId":"142","severity":1,"message":"145","line":106,"column":8,"nodeType":"146","endLine":106,"endColumn":10,"suggestions":"147"},{"ruleId":"142","severity":1,"message":"148","line":119,"column":8,"nodeType":"146","endLine":119,"endColumn":21,"suggestions":"149"},{"ruleId":"130","severity":1,"message":"150","line":135,"column":11,"nodeType":"132","messageId":"133","endLine":135,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":7,"column":5,"nodeType":"153","messageId":"154","endLine":9,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":22,"column":21,"nodeType":"157","endLine":22,"endColumn":25},{"ruleId":"130","severity":1,"message":"158","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":9},{"ruleId":"159","severity":1,"message":"160","line":89,"column":9,"nodeType":"161","endLine":89,"endColumn":32},{"ruleId":"159","severity":1,"message":"160","line":98,"column":9,"nodeType":"161","endLine":98,"endColumn":32},{"ruleId":"162","severity":1,"message":"163","line":121,"column":22,"nodeType":"164","messageId":"165","endLine":121,"endColumn":24},{"ruleId":"130","severity":1,"message":"166","line":124,"column":13,"nodeType":"132","messageId":"133","endLine":124,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":134,"column":17,"nodeType":"161","endLine":134,"endColumn":34},{"ruleId":"130","severity":1,"message":"158","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":9},{"ruleId":"159","severity":1,"message":"160","line":40,"column":9,"nodeType":"161","endLine":40,"endColumn":32},{"ruleId":"159","severity":1,"message":"160","line":45,"column":9,"nodeType":"161","endLine":45,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":84,"column":22,"nodeType":"164","messageId":"165","endLine":84,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":93,"column":17,"nodeType":"161","endLine":93,"endColumn":34},{"ruleId":"130","severity":1,"message":"167","line":15,"column":3,"nodeType":"132","messageId":"133","endLine":15,"endColumn":11},{"ruleId":"130","severity":1,"message":"168","line":5,"column":22,"nodeType":"132","messageId":"133","endLine":5,"endColumn":27},{"ruleId":"162","severity":1,"message":"169","line":59,"column":33,"nodeType":"164","messageId":"165","endLine":59,"endColumn":35},{"ruleId":"162","severity":1,"message":"169","line":69,"column":37,"nodeType":"164","messageId":"165","endLine":69,"endColumn":39},{"ruleId":"159","severity":1,"message":"160","line":75,"column":25,"nodeType":"161","endLine":75,"endColumn":44},{"ruleId":"130","severity":1,"message":"135","line":18,"column":8,"nodeType":"132","messageId":"133","endLine":18,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":75,"column":13,"nodeType":"144","endLine":79,"endColumn":4},{"ruleId":"142","severity":1,"message":"170","line":79,"column":6,"nodeType":"146","endLine":79,"endColumn":8,"suggestions":"171"},{"ruleId":"142","severity":1,"message":"143","line":81,"column":13,"nodeType":"144","endLine":85,"endColumn":4},{"ruleId":"142","severity":1,"message":"172","line":85,"column":6,"nodeType":"146","endLine":85,"endColumn":24,"suggestions":"173"},{"ruleId":"142","severity":1,"message":"148","line":96,"column":6,"nodeType":"146","endLine":96,"endColumn":19,"suggestions":"174"},{"ruleId":"130","severity":1,"message":"175","line":100,"column":11,"nodeType":"132","messageId":"133","endLine":100,"endColumn":15},{"ruleId":"130","severity":1,"message":"135","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":20,"column":8,"nodeType":"132","messageId":"133","endLine":20,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":61,"column":10,"nodeType":"132","messageId":"133","endLine":61,"endColumn":18},{"ruleId":"130","severity":1,"message":"139","line":61,"column":20,"nodeType":"132","messageId":"133","endLine":61,"endColumn":31},{"ruleId":"130","severity":1,"message":"140","line":62,"column":10,"nodeType":"132","messageId":"133","endLine":62,"endColumn":18},{"ruleId":"130","severity":1,"message":"141","line":65,"column":10,"nodeType":"132","messageId":"133","endLine":65,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":74,"column":13,"nodeType":"144","endLine":79,"endColumn":4},{"ruleId":"142","severity":1,"message":"148","line":91,"column":6,"nodeType":"146","endLine":91,"endColumn":19,"suggestions":"176"},{"ruleId":"130","severity":1,"message":"177","line":93,"column":9,"nodeType":"132","messageId":"133","endLine":93,"endColumn":19},{"ruleId":"130","severity":1,"message":"150","line":121,"column":9,"nodeType":"132","messageId":"133","endLine":121,"endColumn":23},{"ruleId":"130","severity":1,"message":"135","line":17,"column":8,"nodeType":"132","messageId":"133","endLine":17,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":20,"column":8,"nodeType":"132","messageId":"133","endLine":20,"endColumn":17},{"ruleId":"130","severity":1,"message":"178","line":61,"column":10,"nodeType":"132","messageId":"133","endLine":61,"endColumn":20},{"ruleId":"130","severity":1,"message":"179","line":61,"column":22,"nodeType":"132","messageId":"133","endLine":61,"endColumn":35},{"ruleId":"130","severity":1,"message":"138","line":64,"column":10,"nodeType":"132","messageId":"133","endLine":64,"endColumn":18},{"ruleId":"130","severity":1,"message":"139","line":64,"column":20,"nodeType":"132","messageId":"133","endLine":64,"endColumn":31},{"ruleId":"130","severity":1,"message":"140","line":65,"column":10,"nodeType":"132","messageId":"133","endLine":65,"endColumn":18},{"ruleId":"130","severity":1,"message":"141","line":68,"column":10,"nodeType":"132","messageId":"133","endLine":68,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":81,"column":13,"nodeType":"144","endLine":87,"endColumn":4},{"ruleId":"142","severity":1,"message":"180","line":87,"column":6,"nodeType":"146","endLine":87,"endColumn":8,"suggestions":"181"},{"ruleId":"142","severity":1,"message":"143","line":89,"column":13,"nodeType":"144","endLine":95,"endColumn":4},{"ruleId":"142","severity":1,"message":"148","line":110,"column":6,"nodeType":"146","endLine":110,"endColumn":19,"suggestions":"182"},{"ruleId":"130","severity":1,"message":"150","line":140,"column":9,"nodeType":"132","messageId":"133","endLine":140,"endColumn":23},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},"no-unused-vars","'env' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","'DialogContentText' is defined but never used.","'TextField' is defined but never used.","'moment' is defined but never used.","'editData' is assigned a value but never used.","'setEditData' is assigned a value but never used.","'readOnly' is assigned a value but never used.","'ticketLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'props.user' and 'rowsPerPage'. Either include them or remove the dependency array. You can also do a functional update 'setRowsPerPage(r => ...)' if you only need 'rowsPerPage' in the 'setRowsPerPage' call.","ArrayExpression",["187"],"React Hook useEffect has a missing dependency: 'userPagination'. Either include it or remove the dependency array.",["188"],"'changeReadonly' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'_' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'i' is assigned a value but never used.","'Redirect' is defined but never used.","'Space' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'page', 'props.searchName', and 'rowsPerPage'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has missing dependencies: 'page' and 'rowsPerPage'. Either include them or remove the dependency array.",["190"],["191"],"'data' is assigned a value but never used.",["192"],"'updateUser' is assigned a value but never used.","'searchName' is assigned a value but never used.","'setSearchName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.searchName'. Either include it or remove the dependency array.",["193"],["194"],"no-native-reassign",["195"],"no-negated-in-lhs",["196"],{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"199","fix":"204"},{"desc":"199","fix":"205"},{"desc":"206","fix":"207"},{"desc":"199","fix":"208"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props.user, rowsPerPage]",{"range":"209","text":"210"},"Update the dependencies array to be: [rowsPerPage, userPagination]",{"range":"211","text":"212"},"Update the dependencies array to be: [page, props.searchName, rowsPerPage]",{"range":"213","text":"214"},{"range":"215","text":"214"},{"range":"216","text":"212"},{"range":"217","text":"212"},"Update the dependencies array to be: [props.searchName]",{"range":"218","text":"219"},{"range":"220","text":"212"},[3623,3625],"[props.user, rowsPerPage]",[4186,4199],"[rowsPerPage, userPagination]",[2531,2533],"[page, props.searchName, rowsPerPage]",[2770,2788],[3199,3212],[3106,3119],[2789,2791],"[props.searchName]",[3587,3600]]
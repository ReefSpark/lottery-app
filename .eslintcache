[{"/root/Documents/lottery-app/src/Component/login.js":"1","/root/Documents/lottery-app/src/Component/tablePagation/purchaseCalculation.js":"2","/root/Documents/lottery-app/src/Component/viewCalculation.js":"3","/root/Documents/lottery-app/src/Component/purchase-ticket.js":"4","/root/Documents/lottery-app/src/Component/manage-ticket.js":"5","/root/Documents/lottery-app/src/App.js":"6","/root/Documents/lottery-app/src/Component/Dasdboard.js":"7","/root/Documents/lottery-app/src/Component/tablePagation/searchPagenation.js":"8","/root/Documents/lottery-app/src/Component/tablePagation/manageTicketPagenation.js":"9","/root/Documents/lottery-app/src/Component/header.js":"10","/root/Documents/lottery-app/src/Component/tablePagation/searchManageTicket.js":"11","/root/Documents/lottery-app/src/Component/viewTickets.js":"12","/root/Documents/lottery-app/src/Component/user.js":"13","/root/Documents/lottery-app/src/Component/viewUsers.js":"14","/root/Documents/lottery-app/src/history.js":"15","/home/selvi/Desktop/My App Pro/lottery-app-main/src/index.js":"16","/home/selvi/Desktop/My App Pro/lottery-app-main/src/App.js":"17","/home/selvi/Desktop/My App Pro/lottery-app-main/src/reportWebVitals.js":"18","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/viewCalculation.js":"19","/home/selvi/Desktop/My App Pro/lottery-app-main/src/history.js":"20","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/login.js":"21","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/header.js":"22","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/viewUsers.js":"23","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/viewTickets.js":"24","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/purchaseCalculation.js":"25","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/user.js":"26","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/tablePagenation.js":"27","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/purchase-ticket.js":"28","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/manage-ticket.js":"29","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/searchPagenation.js":"30","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/manageTicketPagenation.js":"31","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/searchManageTicket.js":"32","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/Input/Input.js":"33","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/Dashboard.js":"34","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/table.js":"35","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/addForm.js":"36","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/modalDetail.js":"37"},{"size":3314,"mtime":1611690001420,"results":"38","hashOfConfig":"39"},{"size":11661,"mtime":1611731284748,"results":"40","hashOfConfig":"39"},{"size":1034,"mtime":1611724843592,"results":"41","hashOfConfig":"39"},{"size":10031,"mtime":1611732776504,"results":"42","hashOfConfig":"39"},{"size":9820,"mtime":1611691894872,"results":"43","hashOfConfig":"39"},{"size":1558,"mtime":1611723408996,"results":"44","hashOfConfig":"39"},{"size":7424,"mtime":1611731876440,"results":"45","hashOfConfig":"39"},{"size":8341,"mtime":1611499830512,"results":"46","hashOfConfig":"39"},{"size":8811,"mtime":1611424236372,"results":"47","hashOfConfig":"39"},{"size":2651,"mtime":1611732711216,"results":"48","hashOfConfig":"39"},{"size":9346,"mtime":1611498750720,"results":"49","hashOfConfig":"39"},{"size":1431,"mtime":1611428201536,"results":"50","hashOfConfig":"39"},{"size":6856,"mtime":1611499053988,"results":"51","hashOfConfig":"39"},{"size":1431,"mtime":1611498861428,"results":"52","hashOfConfig":"39"},{"size":106,"mtime":1610457392000,"results":"53","hashOfConfig":"39"},{"size":553,"mtime":1611732938000,"results":"54","hashOfConfig":"55"},{"size":1558,"mtime":1611732938000,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1611732938000,"results":"57","hashOfConfig":"55"},{"size":1034,"mtime":1611732938000,"results":"58","hashOfConfig":"55"},{"size":106,"mtime":1611732938000,"results":"59","hashOfConfig":"55"},{"size":3314,"mtime":1611732938000,"results":"60","hashOfConfig":"55"},{"size":2651,"mtime":1612106790524,"results":"61","hashOfConfig":"55"},{"size":1431,"mtime":1611732938000,"results":"62","hashOfConfig":"55"},{"size":1431,"mtime":1611732938000,"results":"63","hashOfConfig":"55"},{"size":11661,"mtime":1611732938000,"results":"64","hashOfConfig":"55"},{"size":6856,"mtime":1611732938000,"results":"65","hashOfConfig":"55"},{"size":0,"mtime":1611732938000,"results":"66","hashOfConfig":"55"},{"size":11923,"mtime":1612331940760,"results":"67","hashOfConfig":"55"},{"size":3536,"mtime":1612323872944,"results":"68","hashOfConfig":"55"},{"size":8341,"mtime":1611732938000,"results":"69","hashOfConfig":"55"},{"size":8811,"mtime":1611732938000,"results":"70","hashOfConfig":"55"},{"size":9346,"mtime":1611732938000,"results":"71","hashOfConfig":"55"},{"size":1103,"mtime":1612092737685,"results":"72","hashOfConfig":"55"},{"size":18504,"mtime":1612359488693,"results":"73","hashOfConfig":"55"},{"size":3599,"mtime":1612358581195,"results":"74","hashOfConfig":"55"},{"size":2223,"mtime":1612329213704,"results":"75","hashOfConfig":"55"},{"size":2590,"mtime":1612359865224,"results":"76","hashOfConfig":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17s6qvr",{"filePath":"79","messages":"80","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"s85e3o",{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":96,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/root/Documents/lottery-app/src/Component/login.js",["163","164"],"/root/Documents/lottery-app/src/Component/tablePagation/purchaseCalculation.js",["165","166","167","168","169","170","171","172","173","174","175"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Axios from 'axios';\n// popup\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment-timezone';\n\nconst URL = `${process.env.REACT_APP_API_BASE_URL}`;\n//popup\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst columns = [\n\n    { id: 'ticket_name', label: 'Name', minWidth: 100, align: 'center' },\n    {\n        id: 'actual_price',\n        label: 'Actual Price',\n        minWidth: 100,\n        align: 'center'\n    },\n    { id: 'ticket_number', label: 'Ticket Number', minWidth: 100, align: 'center' },\n    {\n        id: 'sell_price',\n        label: 'Sell Price',\n        minWidth: 100,\n        align: 'center'\n    },\n    {\n        id: 'show_time',\n        label: 'Show Time',\n        minWidth: 100,\n        align: 'center'\n    },\n    {\n        id: 'date',\n        label: 'Create Date',\n        minWidth: 100,\n        align: 'center'\n    }\n];\nconst ticketColumns = [\n    { id: 'combination', label: 'Combination', minWidth: 100 },\n    { id: 'prize', label: 'Prize', minWidth: 100, },\n    { id: 'sell_price', label: 'Sell Price', minWidth: 100, }\n]\nconst useStyles = makeStyles({\n    root: {\n        width: '80%',\n        margin: `3% 0 0 10%`,\n    },\n    container: {\n        maxHeight: 440,\n    },\n});\nconst dateObj = new Date();\nconst month = dateObj.getUTCMonth() + 1; //months from 1-12\nconst day = dateObj.getUTCDate();\nconst year = dateObj.getUTCFullYear();\n\nconst newdate = year + \"-\" + month + \"-\" + day;\n\nexport default function StickyHeadTable(props) {\n    console.log('Props:',{props})\n    const classes = useStyles();\n    const [rows, setRow] = React.useState([])\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [responseData,setResponseDate]=React.useState([])\n    // popup\n    const [editData, setEditData] = React.useState({});\n    const [readOnly, setReadOnly] = React.useState(true);\n    const [open, setOpen] = React.useState(false);\n    const [tickets, setTickets] = React.useState([]);\n    const [ticketLoading, setTicketLoading] = React.useState(false);\n    // popup\n    const handleClose = () => {\n        setOpen(false);\n        setTicketLoading(false);\n        setTickets([])\n        setReadOnly(true)\n    };\n    // component did mount\n    useEffect(async () => {\n        let { data } = await Axios.get(`${URL}/api/v1/purchase/purchase-calculation?user=${props.user}&date=${newdate}`);\n        // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${page}&limit=${rowsPerPage}`);\n       \n        setRowsPerPage(+rowsPerPage);\n        setResponseDate(data)\n        setRow(data.purchase);\n    }, []);\n    // our custom function\n    const userPagination = async (event, something) => {\n        let { data } = await Axios.get(`${URL}/api/v1/purchase/purchase-calculation?user=${props.user}&date=${newdate}`);\n        // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${something}&limit=${rowsPerPage}`);\n        setRow(data.purchase);\n        setRowsPerPage(+rowsPerPage);\n        setResponseDate(data)\n        setPage(something);\n    }\n    // it call whenever rowsperpage changes\n    useEffect(() => {\n        userPagination(rowsPerPage, 0)\n    }, [rowsPerPage]);\n    // popup\n\n    const getTicket = async (a) => {\n        setTicketLoading(true)\n        console.log(responseData.winningTicket)\n        setTickets(responseData.winningTicket);\n        setTicketLoading(false);\n    }\n    function rowClick(a) {\n        console.log(a);\n        // setEditData(a);\n        getTicket(a)\n        setOpen(true);\n    }\n    // popup\n    const changeReadonly = () => {\n        setReadOnly(false)\n    }\n    // change rows per page\n    const handleChangeRowsPerPage = async (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    return (\n        // const classes = useStyles();\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow selected={true}>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column._id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                {column.format && typeof value === 'number' ? value : value}\n                                            </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 20, 25, 100]} // we can set whatever we want\n                component=\"div\"\n                count={29} // !! important ---> need to set total count of records\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={userPagination} // our custom function (NEXT, PREV) button\n                onChangeRowsPerPage={handleChangeRowsPerPage} // rows per page function\n            />\n\n            {/* popup start */}\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                disableBackdropClick={true}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Winning Tickets\"}</DialogTitle>\n                <DialogContent>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow selected={true}>\n                                {ticketColumns.map((column) => (\n                                    <TableCell\n                                        key={column._id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {/* {tickets.length > 0} */}\n                            {tickets.length > 0 ? tickets.map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                                        {ticketColumns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    {column.format && typeof value === 'number' ? value : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            }) : <TableRow>\n                                    <TableCell>  </TableCell>\n                                    <TableCell style={{ textAlign: 'center' }}> No Data </TableCell>\n                                    <TableCell>  </TableCell>\n                                </TableRow>}\n                        </TableBody>\n                    </Table>\n                    {/* <form className={classes.container}  >\n            <TextField\n              name={'email'}\n              value={editData.email}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            /> <br />\n            <TextField\n              name={'name'}\n              value={editData.name}\n              InputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            />\n          </form> */}\n                </DialogContent>\n                <DialogActions>\n                    {/* <Button onClick={() => updateUser({ ...editData })} color=\"primary\">\n            Update\n          </Button> */}\n                    {/* <Button onClick={changeReadonly} color=\"primary\">\n            Edit\n          </Button> */}\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n          </Button>\n                </DialogActions>\n            </Dialog>\n            {/* popup end */}\n            <div className=\"row\">\n                {console.log(\"data:\",responseData)}\n                <div className=\"col\">\n                    <label className=\"form-label\" >Excess Amount : {responseData.excessAmount} </label>\n                </div>\n                <div className=\"col\">\n                    <label className=\"form-label\" >Winning Amount : {responseData.winningAmount} </label>\n                </div>\n                <div className=\"col\">\n                    <label className=\"form-label\" >Ticket Price : {responseData.ticketPrice}</label>\n                </div>\n                <div className=\"col\">\n                    <label className=\"form-label\" >Total : {responseData.total}</label>\n                </div>\n\n            </div>\n        </Paper>\n    );\n}","/root/Documents/lottery-app/src/Component/viewCalculation.js",["176","177"],"import React, { Component } from 'react'\nimport Pagenation from './tablePagation/purchaseCalculation'\nimport '../Component/style-sheet/tableStyle.css'\nimport history from '../history';\nimport queryString from 'query-string';\nclass ViewTickets extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    backSumbit = () => {\n        history.push('/purchase-ticket');\n    }\n\n    render() {\n        const parsed = queryString.parse(window.location.search);\n        return (\n            <div>\n                <div className=\"user-list-search\">\n                    <input type=\"submit\" style={{ \"backgroundColor\": \"black\", color: \"white\", width: \"20%\" }} id=\"form8Example3\" className=\"form-control search-button-controll\" value=\"Back\" onClick={this.backSumbit} />\n                    <h3 className=\"search-text\">Purchase Calculation</h3>\n                    <h1></h1>\n                </div>\n                <Pagenation user={parsed.name} />\n                \n            </div>\n        )\n    }\n}\nexport default ViewTickets\n","/root/Documents/lottery-app/src/Component/purchase-ticket.js",["178","179","180","181","182","183"],"/root/Documents/lottery-app/src/Component/manage-ticket.js",["184","185","186","187","188"],"import React, { Component } from 'react'\nimport _ from 'lodash';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Axios from 'axios'\nimport './style-sheet/manage-tickets.css'\nimport history from '../history';\nclass ManageTicket extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ticketName: '',\n            price: 0,\n            quantity: 1,\n            ticketNumber: [],\n            ticketNumberPrice: [],\n            ticketNumberError: '',\n            ticketNumberPriceError: '',\n            ticketNameError: '',\n            priceError: '',\n            values: [{}],\n            pagenation: true,\n\n        }\n        this.fieldsArray = [];\n        this.inc = 0;\n    }\n    handleNameText = event => {\n        this.setState({ ticketName: event.target.value, quantity: 0 })\n    }\n    handlePriceText = event => {\n        this.setState({ price: event.target.value, quantity: 0 })\n    }\n    handleQuantitySelection = event => {\n        this.setState({ quantity: event.target.value })\n        this.loopTextFields(event.target.value)\n    }\n    handleText = (i, event) => {\n        this.state.ticketNumber[i] = event.target.value.toUpperCase()\n        this.setState({ ticketNumber: this.state.ticketNumber, quantity: 0 })\n    }\n\n    handleTicketNumberPrice = (i, event) => {\n        this.state.ticketNumberPrice[i] = event.target.value.toUpperCase()\n        this.setState({ ticketNumberPrice: this.state.ticketNumberPrice, quantity: 0 })\n    }\n    removeSumbit = () => {\n        this.fieldsArray.splice(this.fieldsArray - 1, 1)\n        this.setState({ quantity: 0 })\n    }\n    // componentWillUpdate(){\n    //     this.setState({quantity:0})\n    // }\n    validate = () => {\n        let ticketNumberError = '', ticketNumberPriceError = '', ticketNameError = '', priceError = ''\n\n        if (this.state.ticketName === '') {\n            ticketNameError = \"Ticket name cannot be blank\"\n        }\n        if (this.state.price === 0) {\n            priceError = \"Price cannot be blank\"\n        }\n        if (ticketNameError || priceError) {\n            this.setState({ ticketNumberError: ticketNumberError, ticketNumberPriceError: ticketNumberPriceError, ticketNameError: ticketNameError, priceError: priceError });\n            return false\n        }\n        return true\n    }\n    viewTicket = () => {\n        history.push('/view-ticket')\n    }\n    addItem = () => {\n        this.setState({ quantity: 1 })\n        this.loopTextFields(1);\n    }\n    removeSumbit = () => {\n        this.fieldsArray.splice(this.fieldsArray.length - 1, 1)\n        this.setState({})\n    }\n    purchaseSumbit = () => {\n        this.setState({ quantity: 0 })\n        const isValid = this.validate();\n        if (this.inc == 0) {\n            toast.error(\"Please Add Ticket Combination\");\n        }\n        if (isValid) {\n\n            let i = 0;\n            let ticketNumberCount = this.state.ticketNumber\n            let ticketNumberPriceCount = this.state.ticketNumberPrice\n            while (i < ticketNumberCount.length) {\n                this.state.values[i] = {\n                    combination: ticketNumberCount[i].toUpperCase(),\n                    prize: Number(ticketNumberPriceCount[i]),\n                }\n                this.setState({ values: this.state.values })\n                i++\n            }\n            let data = Object.assign({\n                data: {\n                    attributes: [\n                        { name: this.state.ticketName.toUpperCase(), price: Number(this.state.price) },\n                        this.state.values]\n\n                }\n            });\n            return Axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/v1/master`, data).then((response) => {\n                if (response.status === 200)\n                    this.setState({ message: response.data.data.attributes.message, pagenation: false })\n                toast.success(this.state.message);\n            }).catch((err) => {\n                if (err.response.status === 400) {\n                    this.setState({ message: err.response.data.data.attributes.message })\n                    return toast.error(this.state.message);\n                }\n            });\n        }\n    }\n    loopTextFields(count) {\n        for (let i = 0; i < count; i++) {\n            this.fieldsArray.push(\n                // <div className=\"row \" style={{padding:\"2%\"}}>\n                //     <div className=\"col\">\n                //         <div className=\"form-outline\">\n                //             \n                //         </div>\n                //     </div>\n                //     <div className=\"col\">\n                //         <div className=\"form-outline\">\n                //             <input type=\"email\" id=\"form8Example2\" className=\"form-control\" onChange={this.handleTicketNumberPrice.bind(this, this.inc)} />\n                //             {this.state.ticketNumberPriceError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                //                 {this.state.ticketNumberPriceError}\n                //             </div>)}\n                //         </div>\n                //     </div>\n                // </div>\n                <div className=\"loop-array\" >\n                    <input type=\"text\" id=\"form8Example1\" className=\"form-control\" style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} onChange={this.handleText.bind(this, this.inc)} />\n                    {this.state.ticketNumberError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                        {this.state.ticketNumberError}\n                    </div>)}\n                    <input type=\"text\" id=\"form8Example2\" className=\"form-control\"  style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} onChange={this.handleTicketNumberPrice.bind(this, this.inc)} />\n                    {this.state.ticketNumberPriceError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                        {this.state.ticketNumberPriceError}\n                    </div>)}\n                    <button className=\"btn  user-button\" style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} onClick={this.removeSumbit}>Remove </button>\n                </div>\n            );\n            this.inc++;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 style={{ \"marginTop\": \"3%\" }}>Add Ticket Name</h3>\n                <div className=\"user-form\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-outline\">\n                                <label className=\"form-label\" >Ticket Name *</label>\n                                <input type=\"text\" id=\"form8Example1\" className=\"form-control\" onChange={this.handleNameText} />\n                                {this.state.ticketNameError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                                    {this.state.ticketNameError}\n                                </div>)}\n                            </div>\n                        </div>\n                        <div className=\"col\">\n\n                            <div className=\"form-outline\">\n                                <label className=\"form-label\">Price *</label>\n                                <input type=\"email\" id=\"form8Example2\" className=\"form-control\" onChange={this.handlePriceText} />\n                                {this.state.priceError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                                    {this.state.priceError}\n                                </div>)}\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <label className=\"form-label\"> Ticket Number Quantity*</label>\n                            <input type=\"text\" id=\"form8Example1\" className=\"form-control\" onChange={this.handleQuantitySelection} />\n                        </div>\n                    </div>\n                    <br></br>\n\n                    <div className=\"purchase-ticket-form\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <label className=\"form-label\" >Ticket Number *</label>\n                            </div>\n\n                            <div className=\"col\">\n                                <label className=\"form-label\" >Prize *</label>\n                            </div>\n\n                        </div>\n                        <div>\n                            {this.fieldsArray}\n                        </div>\n\n                    </div>\n                    <div className=\"button-ticket\">\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.purchaseSumbit}>Add Ticket Name</button>\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.viewTicket}>View Ticket</button>\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.addItem}>Add Action</button>\n                        <button style={{ marginTop: \"1.5%\", marginRight: \"2%\" }} className=\"btn  add-user-button\" onClick={this.removeSumbit}>Remove Action</button>\n                    </div>\n                    < ToastContainer\n                        position=\"top-right\"\n                        autoClose={3000} />\n                    <div className=\"seprate-line\">\n                    </div>\n                    <br></br>\n                    {/* <h4>Ticket Master List</h4>\n                    <Pagenation callChild={this.state.pagenation} /> */}\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default ManageTicket","/root/Documents/lottery-app/src/App.js",["189"],"\nimport './App.css';\nimport Login from './Component/login'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport history from './history';\nimport Dashboard from './Component/header'\nimport ViewTicket from './Component/viewTickets'\nimport ViewUsers from './Component/viewUsers'\nimport ViewCalculation from './Component/viewCalculation.js'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Dashboard/> */}\n      <Switch>\n        <Router history={history}>\n          {/* <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return (\n                      !localStorage.getItem('token') ?\n                      <Redirect to=\"/login\" /> :\n                      <Redirect to=\"/dashboard\" /> \n                    )\n                }}\n              /> */}\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/users\" component={Dashboard} />\n          <Route exact path=\"/manage-tickets\" component={Dashboard} />\n          <Route exact path=\"/purchase-ticket\" component={Dashboard} />\n          <Route exact path=\"/view-users\" component={ViewUsers} />\n          <Route exact path=\"/view-ticket\" component={ViewTicket} />\n          <Route exact path=\"/purchase-calculation\" component={ViewCalculation} />\n        </Router>\n      </Switch>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","/root/Documents/lottery-app/src/Component/Dasdboard.js",["190","191","192","193"],"/root/Documents/lottery-app/src/Component/tablePagation/searchPagenation.js",["194","195","196","197","198","199","200"],"/root/Documents/lottery-app/src/Component/tablePagation/manageTicketPagenation.js",["201","202","203","204","205","206","207","208","209","210"],"/root/Documents/lottery-app/src/Component/header.js",[],"/root/Documents/lottery-app/src/Component/tablePagation/searchManageTicket.js",["211","212","213","214","215","216","217","218","219","220","221","222","223"],"/root/Documents/lottery-app/src/Component/viewTickets.js",[],["224","225"],"/root/Documents/lottery-app/src/Component/user.js",[],"/root/Documents/lottery-app/src/Component/viewUsers.js",[],"/root/Documents/lottery-app/src/history.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/index.js",[],["226","227"],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/App.js",["228"],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/reportWebVitals.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/viewCalculation.js",["229","230"],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/history.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/login.js",["231","232"],"import React, { Component } from 'react'\nimport \"./style-sheet/login.css\"\nimport Axios from 'axios'\nimport env from 'dotenv'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport history from '../history';\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            email: \"\",\n            password: \"\",\n            message: \"\",\n            emailError: '',\n            passwordError: '',\n            enable: true,\n            disable: false\n        }\n    }\n\n    handleText = event => {\n        this.setState({ email: event.target.value })\n    }\n    handlePasswordText = (event) => {\n        this.setState({ password: event.target.value })\n    }\n\n    validate = () => {\n        let emailError = '';\n        let passwordError = '';\n        if (this.state.password === '') {\n            passwordError = \"Name cannot be blank\"\n        }\n        if (this.state.email.indexOf('@') < 0) {\n            emailError = \"Enter vaild email\"\n        }\n        if (emailError || passwordError) {\n            this.setState({ emailError: emailError, passwordError: passwordError })\n            return false\n        }\n        return true\n    }\n\n    loginSumbit = (event) => {\n        this.getReponse()\n        event.preventDefault()\n    }\n\n    async getReponse() {\n        const isValid = this.validate();\n        if (isValid) {\n            return Axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/v1/user/login`, { data: { attributes: { email: this.state.email, password: this.state.password } } }).then((response) => {\n                this.setState({ message: response.data.data.attributes.message })\n                //localStorage.setItem('token', this.state.email);\n                toast.success(this.state.message);\n                //history.push('/dashobard')\n\n            }).catch((err) => {\n                this.setState({ message: err.response.data.data.attributes.message })\n                return toast.error(this.state.message);\n\n            });\n        }\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"login-phase\">\n                    <div className=\"login-controll\">\n                        <input type=\"text\" placeholder=\"Email\" value={this.state.email} onChange={this.handleText} /><br></br>\n                        {this.state.emailError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                            {this.state.emailError}\n                        </div>)}\n                        <input type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handlePasswordText} /><br></br>\n                        {this.state.passwordError && (<div style={{ \"color\": \"red\", \"fontSize\": \"12px\" }}>\n                            {this.state.passwordError}\n                        </div>)}\n                        <button type=\"button\" className=\"btn btn-primary btn-lg \" id=\"load1\" data-loading-text=\"<i className='fa fa-circle-o-notch fa-spin'></i> Processing Order\" onClick={this.loginSumbit}>Login</button>\n                    </div>\n\n                </div>\n                < ToastContainer\n                    position=\"top-right\"\n                    autoClose={3000} />\n\n            </div>\n        )\n    }\n}\n\nexport default Login\n","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/header.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/viewUsers.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/viewTickets.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/purchaseCalculation.js",["233","234","235","236","237","238","239","240","241","242","243"],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/user.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/tablePagenation.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/purchase-ticket.js",["244","245","246","247","248","249","250","251"],"import React, { Component } from 'react';\nimport './style-sheet/purchase-ticket.css'\nimport _ from 'lodash';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Axios from 'axios'\nimport history from '../history';\nimport moment from 'moment-timezone';\nimport {Grid,Paper} from '@material-ui/core';\nimport CustomizedInputs from './Input/Input';\n\nclass PurchaseTicket extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            userNames: [],\n            ticketNames: [],\n            userName: \"\",\n            ticketName: '',\n            quantity: 0,\n            showTime: '11:00 AM',\n            actualPrice: 0,\n            ticketNumber: [],\n            sellingPrice: [],\n            ticketNumberError: '',\n            sellingPriceError: '',\n            message: '',\n            values: [{}],\n            buttonDisable: true,\n            ticketArray:[]\n        }\n        this.fieldsArray = [];\n        this.inc = 0;\n        this.today = moment().format('YYYY-MM-DD');\n    }\n    validate = () => {    \n            let i = 0;          \n            let ticketNumberCount = this.state.ticketNumber.filter(function(e){return e});\n            let sellingPriceCount = this.state.sellingPrice.filter(function(e){return e});\n            console.log(ticketNumberCount)\n            if(ticketNumberCount.length != this.fieldsArray.length || sellingPriceCount.length != this.fieldsArray.length){\n                //toast.error(\"Please add ticket number\");\n                return false;\n            }\n            else{\n                while (i < ticketNumberCount.length) {\n                    console.log(ticketNumberCount[i], sellingPriceCount[i])\n                    if(!ticketNumberCount[i]){\n                        toast.error(\"Please add ticket number\");\n                        return false\n                    }\n                    if(!sellingPriceCount[i]){\n                        toast.error(\"Please add selling price\");\n                        return false\n                    }\n                    else{\n                        this.state.values[i] = {\n                            user_id: this.state.userName,\n                            ticket_master_id: this.state.ticketName._id ? this.state.ticketName._id : this.state.ticketName,\n                            actual_price: this.state.actualPrice,\n                            ticket_number: ticketNumberCount[i],\n                            show_time: this.state.showTime,\n                            sell_price: sellingPriceCount[i],\n                            date: new Date()\n                        }\n                        console.log(this.state.ticketNames, this.state.ticketName)\n                        console.log(this.state.ticketNames._id)\n                        this.setState({ values: this.state.values })                    \n                        i++\n                    }                               \n                }   \n                return true\n            }                        \n        // let ticketNumberError = '', sellingPriceError = ''\n        // if (this.state.ticketNumber.length === 0) {\n        //     ticketNumberError = \"Ticket Number cannot be blank\"\n        // }\n        // if (this.state.sellingPrice.length === 0) {\n        //     sellingPriceError = \"Selling Price cannot be blank\"\n        // }\n        // if (ticketNumberError || sellingPriceError) {\n        //     this.setState({ ticketNumberError: ticketNumberError, sellingPriceError: sellingPriceError });\n        //     return false\n        // }\n        // return true\n    }\n    componentDidMount() {\n        Axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/v1/master`).then((response) => {\n            this.setState({ ticketNames: response.data.data.attributes.data, actualPrice: response.data.data.attributes.data[0].price, ticketName: response.data.data.attributes.data[0]._id })\n            //this.loopTicketFunction(1)\n        }).catch((err) => {\n        });\n        Axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/v1/user`).then((response) => {\n\n            this.setState({ userNames: response.data.data.attributes.data, userName: response.data.data.attributes.data[0]._id })\n\n        }).catch((err) => {\n        });\n\n    }\n\n    handleUserNameSelection = event => {\n        this.setState({ userName: event.target.value, })\n    }\n    handleTicketSelection = event => {\n        const ticket = this.state.ticketNames.filter(x => x._id == event.target.value)[0];         \n        this.setState({ ticketName: ticket, actualPrice: ticket.price, quantity : 0 })            \n        this.fieldsArray = [];\n    }\n    handleQuantitySelection = event => {\n        this.setState({ quantity: event.target.value })\n        this.fieldsArray = [];\n        this.loopTicketFunction(event.target.value);\n    }\n    handleShowTimeSelection = event => {\n        this.setState({ showTime: event.target.value, })\n    }\n    handleTicketNumber = (i, event) => {\n        this.state.ticketNumber[i] = event.target.value.toUpperCase()\n        this.setState({ ticketNumber: this.state.ticketNumber })\n    }\n\n    handleSellingPrice = (i, event) => {\n        this.state.sellingPrice[i] = event.target.value;\n        this.setState({ sellingPrice: this.state.sellingPrice })\n    }\n\n    removeSumbit = () => {\n        this.fieldsArray.splice(this.fieldsArray.length - 1, 1)\n        this.setState({})\n    }\n\n    addItem = () => {\n        this.setState({ quantity: parseFloat(this.state.quantity) + 1 })\n        this.loopTicketFunction(1, 'add');\n    }\n\n    purchasCalculation = () => {\n        history.push({\n            pathname: '/purchase-calculation',\n            search: `?name=${this.state.userName}`\n        })\n    }\n    purchaseSumbit = () => {\n        const values = this.validate();\n        if(!values){\n            toast.error(\"Please fill all the required fields.\");\n        }      \n        else{\n        let data = Object.assign({\n            data: {\n                attributes: this.state.values\n            }\n        })\n        return Axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/v1/purchase/${this.state.userName}`, data).then((response) => {\n            if (response.status === 200)                    \n                this.setState({ message: response.data.data.attributes.message, buttonDisable: false });\n                this.fieldsArray = [];\n                toast.success(this.state.message);                \n        }).catch((err) => {\n            if (err.response.status === 400) {\n                this.setState({ message: err.response.data.data.attributes.message })\n                return toast.error(this.state.message);\n            }\n        });\n       }\n    }\n\n    loopTicketFunction(count, add) {\n        if(!add){\n            this.fieldsArray = [];\n        }                \n        let sno = this.fieldsArray.length;\n        for (let i = 0; i < count; i++) {\n            sno = parseFloat(sno+1)\n            this.fieldsArray.push(\n                <div className=\"ticket-form\" style={{marginTop: (i == 0 && !add) ? '15px' : '0px'}}>                            \n                    <div>     \n                        <CustomizedInputs height={30} width={50} disabled={true} marginTop={0} value={sno} label=\"Serial Number\"/>                    \n                    </div>\n                    <div>     \n                        <CustomizedInputs height={30} marginTop={0} onChange={this.handleTicketNumber.bind(this, this.inc)} label=\"Ticket Number\"/>                    \n                    </div>\n                    <div>     \n                        <CustomizedInputs height={30} marginTop={0} disabled={true} value={this.state.actualPrice} label=\"Actual Price\"/>\n                    </div>\n                    <div>     \n                        <CustomizedInputs height={30} marginTop={0} onChange={this.handleSellingPrice.bind(this, this.inc)} label=\"Selling Price\"/>\n                    </div>\n                    <div>\n                        <button style={{width:'100%', height:'30px', fontSize:14}} className=\"btn  add-user-button\" onClick={this.removeSumbit}> Remove </button>                       \n                    </div>                                                 \n                </div>\n            );\n            this.inc++;\n        }\n    }\n\n    render() {\n        return (\n            <div>                \n                <Grid style={{padding:5}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={11}>\n                    <h4>Purchase Tickets</h4>\n                        <Paper style={{border : '1px solid #cccccc5c'}}>\n                        <div className=\"ticket-form\">\n                            <div className=\"form-outline\">  \n                                <select className=\"select-box\" value={this.state.value} onChange={this.handleUserNameSelection}>                      \n                                    {this.state.userNames.map((value, index) => <option key={index} value={value._id}>{value.name}</option>)}\n                                </select>\n                            </div>\n                            <div className=\"form-outline\">    \n                                <select className=\"select-box\" value={this.state.value} onChange={this.handleTicketSelection}>\n                                    {this.state.ticketNames.map((value, index) => <option key={index} value={value._id} name=\"hello\">{value.name}</option>)}\n                                </select> \n                            </div>                   \n                            <div className=\"form-outline\">                       \n                            <select className=\"select-box\" value={this.state.value} onChange={this.handleChange}>\n                                    <option value=\"11:00 AM\"> 11:00 AM</option>\n                                    <option value=\"02:00 PM\"> 02:00 PM</option>\n                                    <option value=\"05:00 PM\"> 05:00 PM</option>\n                                    <option value=\"08:00 PM\"> 08:00 PM </option>\n                                </select>\n                            </div>\n                            <div className=\"form-outline\" style={{marginTop:14}}>     \n                                <CustomizedInputs purchase={true} value={this.state.quantity} onChange={this.handleQuantitySelection} label=\"Quantity\"/> \n                            </div>\n                            <div className=\"form-outline\">\n                                <button style={{width:'100%'}} className=\"btn  add-user-button\" onClick={this.addItem}>Add Item </button>                       \n                            </div>\n                            <div className=\"form-outline\">                        \n                                <button style={{width:'100%'}} className=\"btn  add-user-button\" onClick={this.purchaseSumbit}>Purchase</button>\n                            </div>                                \n                            </div>\n                        </Paper>\n                    </Grid>                    \n                </Grid>  \n                {\n                    this.fieldsArray.length > 0 &&\n                    <Grid style={{padding:18}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={10}>\n                        <Paper style={{border : '1px solid #cccccc5c'}}>  \n                        <div>\n                            {this.fieldsArray}\n                        </div>     \n                    </Paper>\n                    </Grid>                    \n                </Grid>     \n                }                                             \n                < ToastContainer\n                    position=\"top-right\"\n                    autoClose={3000} />\n            </div>\n        )\n    }\n}\n\nexport default PurchaseTicket\n","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/manage-ticket.js",["252","253","254","255"],"import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Axios from 'axios'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CustomizedInputs from './Input/Input';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginTop:50,\n    textAlign: 'center',\n    boxShadow:'none',\n    color: theme.palette.text.secondary,\n  },\n  cardroot: {\n    minWidth: 450,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  textForm:{\n    marginTop:20\n  },\n  pos: {\n    marginBottom: 12,\n  }\n}));\n\nexport default function ManageTicket() {\n  const classes = useStyles();\n  const [ticket_name, set_ticket_name] = useState('');\n  const [ticket_price, set_ticket_price] = useState('');\n  const [name_error, set_name_error] = useState(false);\n  const [price_error, set_price_error] = useState(false);\n\n  const handleTicketName = event => {\n    set_ticket_name(event.target.value);\n    set_name_error(false)\n  }\n\n  const handleTicketPrice = event => {\n    set_ticket_price(event.target.value);\n    set_price_error(false)\n  }\n\n  const purchaseSumbit = () => {\n    if(ticket_name == \"\" && ticket_price  == \"\"){\n      set_name_error(true)\n      set_price_error(true)\n    }\n    if(ticket_name == \"\"){     \n      set_name_error(true)\n    }\n    else if(ticket_price  == \"\"){      \n      set_price_error(true)\n    }    \n    else{\n      const data = {\n        data : {\n          attributes: {\n            name : ticket_name,\n            price : ticket_price\n          }\n        }       \n      }\n      return Axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/v1/master`, data).then((response) => {\n        if (response.status === 200)\n            toast.success(\"Ticket Added Successfully\");\n            set_ticket_name('');\n            set_ticket_price('');                    \n        }).catch((err) => {               \n            toast.error(err.response.data.data.attributes.message);            \n        })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n       <Grid container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\" item xs={12}>\n          <Paper className={classes.paper}>\n          <Card className={classes.cardroot}>\n            <CardContent>        \n              <Typography variant=\"h5\" component=\"h2\">\n                Add Ticket\n              </Typography>       \n              <div className={classes.textForm}>\n              <CustomizedInputs visibility={name_error} value={ticket_name} onChange={handleTicketName} label=\"Name\"/>       \n              <CustomizedInputs visibility={price_error} value={ticket_price} onChange={handleTicketPrice} label=\"Price\"/>\n              </div>\n            </CardContent>\n            <CardActions style={{justifyContent:'center'}}>\n              <button style={{marginTop:0}}  className=\"btn add-user-button\" onClick={purchaseSumbit}>Add Ticket</button>\n            </CardActions>\n          </Card>\n          < ToastContainer\n            position=\"top-right\"\n            autoClose={3000} />\n          </Paper>\n        </Grid>\n   \n    </div>\n  );\n}","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/searchPagenation.js",["256","257","258","259","260","261","262"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Select from '@material-ui/core/Select';\nimport Axios from 'axios';\n// popup\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport '../style-sheet/pagination.css'\n\nconst URL = `${process.env.REACT_APP_API_BASE_URL}`;\n//popup\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 100,  align: 'center' },\n  {\n    id: 'mobile',\n    label: 'Mobile',\n    minWidth: 100,\n    align: 'center'\n  },\n  {\n    id: 'email',\n    label: 'Email',\n    minWidth: 100,\n    align: 'center'\n  },\n  {\n    id: 'is_active',\n    label: 'Active',\n    minWidth: 100,\n    align: 'center'\n  },\n];\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    margin:`3% 0 0 10%`,\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\nexport default function StickyHeadTable(props) {\n    console.log({props})\n  const classes = useStyles();\n  const [rows, setRow] = React.useState([])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  // popup\n  const [editData, setEditData] = React.useState({});\n  const [readOnly, setReadOnly] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  // popup\n  const handleClose = () => {\n    setOpen(false);\n    setReadOnly(true)\n  };\n  // component did mount\n  useEffect(async () => {\n    let { data } = await Axios.get(`${URL}/api/v1/user?name=${props.searchName}&page_no=${page}&limit=${rowsPerPage}`);\n    console.log(data.data.attributes.data)\n    setRow(data.data.attributes.data);\n  }, []);\n\n  useEffect(async () => {\n    let { data } = await Axios.get(`${URL}/api/v1/user?name=${props.searchName}&page_no=${page}&limit=${rowsPerPage}`);\n    console.log(data.data.attributes.data)\n    setRow(data.data.attributes.data);\n  }, [props.searchName]);\n  // our custom function\n  const userPagination = async (event, something) => {\n    let { data } = await Axios.get(`${URL}/api/v1/user?name=${props.searchName}&page_no=${something}&limit=${rowsPerPage}`);\n    setRow(data.data.attributes.data);\n    setRowsPerPage(+rowsPerPage);\n    setPage(something);\n  }\n  // it call whenever rowsperpage changes\n  useEffect(() => {\n    userPagination(rowsPerPage, 0)\n  }, [rowsPerPage]);\n  // popup\n  const updateUser = async (payload) => {\n    console.log('payload', payload)\n    let { data } = await Axios.patch(`${URL}/api/v1/user/${payload._id}`, {\n      data: {\n        attributes: {\n            email: payload.email,\n            name:payload.name,\n            mobile:payload.mobile,\n            is_active: payload.active,\n\n        }\n      }\n    });\n    userPagination(rowsPerPage, 0)\n    setOpen(false);\n    setReadOnly(true);\n  }\n  function rowClick(a) {\n    console.log(a);\n    setEditData(a);\n    setOpen(true);\n  }\n  // popup\n  const changeReadonly = () => {\n    setReadOnly(false)\n  }\n  // change rows per page\n  const handleChangeRowsPerPage = async (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    // const classes = useStyles();\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow selected={true}>\n              {columns.map((column) => (\n                <TableCell\n                  key={column._id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? value : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 25, 100]} // we can set whatever we want\n        component=\"div\"\n        count={29} // !! important ---> need to set total count of records\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={userPagination} // our custom function (NEXT, PREV) button\n        onChangeRowsPerPage={handleChangeRowsPerPage} // rows per page function\n      />\n      {/* popup start */}\n      <Dialog \n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        contentStyle={{width: \"100%\", maxWidth: \"none\"}}\n       \n      >\n        <DialogTitle s>{\"User View\"}</DialogTitle>\n        <DialogContent>\n\n        <form className={classes.container}  >\n            Email : &nbsp; &nbsp; &nbsp; \n            <TextField\n              name={'email'}\n              value={editData.email}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return { ...prevState, [e.target.name]: e.target.value }\n              })}\n              \n            /> \n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <br />\n            Name : &nbsp; &nbsp; &nbsp; \n            <TextField\n              name={'name'}\n              value={editData.name}\n              InputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return { ...prevState, [e.target.name]: e.target.value }\n              })}\n            />\n            <br />\n            Mobile : &nbsp;&nbsp;&nbsp; \n            <TextField\n              name={'mobile'}\n              value={editData.mobile}\n              InputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return { ...prevState, [e.target.name]: e.target.value }\n              })}\n\n            />\n \n          <br />\t\n              Active : &nbsp;&nbsp;&nbsp;\n              <Select name={'active'} onChange={e => setEditData(prevState => {\n              return { ...prevState, [e.target.name]: e.target.value }\n            })} inputProps={{\n              readOnly: readOnly\n            }} >\n              <option value=\"Yes\">Yes</option>\n              <option value=\"No\">No</option>\n            </Select>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => updateUser({ ...editData })} disabled={readOnly} color=\"primary\">\n            Update\n          </Button>\n          <Button onClick={changeReadonly} color=\"primary\">\n            Edit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* popup end */}\n    </Paper>\n  );\n} ","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/manageTicketPagenation.js",["263","264","265","266","267","268","269","270","271","272"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Axios from 'axios';\n// popup\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nconst URL = `${process.env.REACT_APP_API_BASE_URL}`;\n//popup\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst columns = [\n  \n  { id: 'name', label: 'Name', minWidth: 100 },\n  {\n    id: 'price',\n    label: 'Price',\n    minWidth: 100,\n    align: 'right'\n  },\n  {\n    id: 'created_date',\n    label: 'Create Date',\n    minWidth: 100,\n    align: 'right'\n  }\n];\nconst ticketColumns = [\n  {id: 'combination', label: 'Combination',minWidth: 100},\n  {id: 'prize', label: 'Prize',minWidth: 100,}\n]\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    margin: `3% 0 0 10%`,\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [rows, setRow] = React.useState([])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  // popup\n  const [editData, setEditData] = React.useState({});\n  const [readOnly, setReadOnly] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [tickets, setTickets] = React.useState([]);\n  const [ticketLoading, setTicketLoading] = React.useState(false);\n  // popup\n  const handleClose = () => {\n    setOpen(false);\n    setTicketLoading(false);\n    setTickets([])\n    setReadOnly(true)\n  };\n  // component did mount\n  useEffect(async () => {\n    let { data } = await Axios.get(`${URL}/api/v1/master`);\n    // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${page}&limit=${rowsPerPage}`);\n    console.log(data.data.attributes.data)\n    setRow(data.data.attributes.data);\n  }, []);\n  // our custom function\n  const userPagination = async (event, something) => {\n    let { data } = await Axios.get(`${URL}/api/v1/master`);\n    // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${something}&limit=${rowsPerPage}`);\n    setRow(data.data.attributes.data);\n    setRowsPerPage(+rowsPerPage);\n    setPage(something);\n  }\n  // it call whenever rowsperpage changes\n  useEffect(() => {\n    userPagination(rowsPerPage, 0)\n  }, [rowsPerPage]);\n  // popup\n  const updateUser = async (payload) => {\n    console.log('payload', payload)\n    let { data } = await Axios.patch(`${URL}/api/v1/user/${payload._id}`, {\n      data: {\n        attributes: {\n          email: payload.email\n        }\n      }\n    });\n    console.log('update data result', data);\n    userPagination(rowsPerPage, 0)\n    setOpen(false);\n    setReadOnly(true);\n  }\n  const getTicket = async (a) => {\n    setTicketLoading(true)\n    let { data } = await Axios.get(`${URL}/api/v1/ticket/${a._id}`);\n    console.log(data.data.attributes)\n    setTickets(data.data.attributes.data);\n    setTicketLoading(false);\n  }\n  function rowClick(a) {\n    console.log(a);\n    // setEditData(a);\n    getTicket(a)\n    setOpen(true);\n  }\n  // popup\n  const changeReadonly = () => {\n    setReadOnly(false)\n  }\n  // change rows per page\n  const handleChangeRowsPerPage = async (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    // const classes = useStyles();\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow selected={true}>\n              {columns.map((column) => (\n                <TableCell\n                  key={column._id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? value : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 25, 100]} // we can set whatever we want\n        component=\"div\"\n        count={29} // !! important ---> need to set total count of records\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={userPagination} // our custom function (NEXT, PREV) button\n        onChangeRowsPerPage={handleChangeRowsPerPage} // rows per page function\n      />\n      {/* popup start */}\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        disableBackdropClick={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Tickets\"}</DialogTitle>\n        <DialogContent>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow selected={true}>\n                {ticketColumns.map((column) => (\n                  <TableCell\n                    key={column._id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {tickets.length > 0} */}\n              {tickets.length > 0 ? tickets.map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                    {ticketColumns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number' ? value : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              }): <TableRow>\n                <TableCell>  </TableCell>\n                <TableCell style={{textAlign: 'center'}}> No Data </TableCell>\n                <TableCell>  </TableCell>\n                </TableRow>}\n            </TableBody>\n          </Table>\n          {/* <form className={classes.container}  >\n            <TextField\n              name={'email'}\n              value={editData.email}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            /> <br />\n            <TextField\n              name={'name'}\n              value={editData.name}\n              InputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            />\n          </form> */}\n        </DialogContent>\n        <DialogActions>\n          {/* <Button onClick={() => updateUser({ ...editData })} color=\"primary\">\n            Update\n          </Button> */}\n          {/* <Button onClick={changeReadonly} color=\"primary\">\n            Edit\n          </Button> */}\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* popup end */}\n    </Paper>\n  );\n}","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/tablePagation/searchManageTicket.js",["273","274","275","276","277","278","279","280","281","282","283","284","285"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Axios from 'axios';\n// popup\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nconst URL = `${process.env.REACT_APP_API_BASE_URL}`;\n//popup\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst columns = [\n\n  { id: 'name', label: 'Name', minWidth: 100 },\n  {\n    id: 'price',\n    label: 'Price',\n    minWidth: 100,\n    align: 'right'\n  },\n  {\n    id: 'created_date',\n    label: 'Create Date',\n    minWidth: 100,\n    align: 'right'\n  }\n];\nconst ticketColumns = [\n  { id: 'combination', label: 'Combination', minWidth: 100 },\n  { id: 'prize', label: 'Prize', minWidth: 100, }\n]\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    margin: `3% 0 0 10%`,\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\nexport default function StickyHeadTable(props) {\n\n  const classes = useStyles();\n  const [rows, setRow] = React.useState([])\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchName, setSearchName] = React.useState();\n\n  // popup\n  const [editData, setEditData] = React.useState({});\n  const [readOnly, setReadOnly] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [tickets, setTickets] = React.useState([]);\n  const [ticketLoading, setTicketLoading] = React.useState(false);\n\n  //  setSearchName(props.searchName)\n  // popup\n\n  const handleClose = () => {\n    setOpen(false);\n    setTicketLoading(false);\n    setTickets([])\n    setReadOnly(true)\n  };\n\n  // component did mount\n  useEffect(async () => {\n\n    let { data } = await Axios.get(`${URL}/api/v1/master?name=${props.searchName}`);\n    // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${page}&limit=${rowsPerPage}`);\n    console.log(data.data.attributes.data)\n    setRow(data.data.attributes.data);\n  }, []);\n\n  useEffect(async () => {\n\n    let { data } = await Axios.get(`${URL}/api/v1/master?name=${props.searchName}`);\n    // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${page}&limit=${rowsPerPage}`);\n    console.log(data.data.attributes.data)\n    setRow(data.data.attributes.data);\n  }, [props.searchName]);\n\n\n\n  // our custom function\n  const userPagination = async (event, something) => {\n    let { data } = await Axios.get(`${URL}/api/v1/master?name=${props.searchName}`);\n    // let { data } = await Axios.get(`${URL}/api/v1/user?page_no=${something}&limit=${rowsPerPage}`);\n    setRow(data.data.attributes.data);\n    setRowsPerPage(+rowsPerPage);\n    setPage(something);\n  }\n  // it call whenever rowsperpage changes\n  useEffect(() => {\n    userPagination(rowsPerPage, 0)\n  }, [rowsPerPage]);\n  // // popup\n  // const updateUser = async (payload) => {\n  //   console.log('payload', payload)\n  //   let { data } = await Axios.patch(`${URL}/api/v1/user/${payload._id}`, {\n  //     data: {\n  //       attributes: {\n  //         email: payload.email\n  //       }\n  //     }\n  //   });\n  //   console.log('update data result', data);\n  //   userPagination(rowsPerPage, 0)\n  //   setOpen(false);\n  //   setReadOnly(true);\n  // }\n  const getTicket = async (a) => {\n    setTicketLoading(true)\n    let { data } = await Axios.get(`${URL}/api/v1/ticket/${a._id}`);\n    console.log(data.data.attributes)\n    setTickets(data.data.attributes.data);\n    setTicketLoading(false);\n  }\n  function rowClick(a) {\n    console.log(a);\n    // setEditData(a);\n    getTicket(a)\n    setOpen(true);\n  }\n  // popup\n  const changeReadonly = () => {\n    setReadOnly(false)\n  }\n  // change rows per page\n  const handleChangeRowsPerPage = async (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    // const classes = useStyles();\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow selected={true}>\n              {columns.map((column) => (\n                <TableCell\n                  key={column._id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? value : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 25, 100]} // we can set whatever we want\n        component=\"div\"\n        count={29} // !! important ---> need to set total count of records\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={userPagination} // our custom function (NEXT, PREV) button\n        onChangeRowsPerPage={handleChangeRowsPerPage} // rows per page function\n      />\n      {/* popup start */}\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        disableBackdropClick={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Tickets\"}</DialogTitle>\n        <DialogContent>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow selected={true}>\n                {ticketColumns.map((column) => (\n                  <TableCell\n                    key={column._id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {tickets.length > 0} */}\n              {tickets.length > 0 ? tickets.map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={() => rowClick(row)}>\n                    {ticketColumns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number' ? value : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              }) : <TableRow>\n                  <TableCell>  </TableCell>\n                  <TableCell style={{ textAlign: 'center' }}> No Data </TableCell>\n                  <TableCell>  </TableCell>\n                </TableRow>}\n            </TableBody>\n          </Table>\n          {/* <form className={classes.container}  >\n            <TextField\n              name={'email'}\n              value={editData.email}\n              inputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            /> <br />\n            <TextField\n              name={'name'}\n              value={editData.name}\n              InputProps={{\n                readOnly: readOnly\n              }}\n              onInput={e => setEditData(prevState => {\n                return {...prevState, [e.target.name]:e.target.value}\n              })}\n            />\n          </form> */}\n        </DialogContent>\n        <DialogActions>\n          {/* <Button onClick={() => updateUser({ ...editData })} color=\"primary\">\n            Update\n          </Button> */}\n          {/* <Button onClick={changeReadonly} color=\"primary\">\n            Edit\n          </Button> */}\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* popup end */}\n    </Paper>\n  );\n}","/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/Input/Input.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/Dashboard.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/table.js",["382","383","384","385"],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/addForm.js",[],"/home/selvi/Desktop/My App Pro/lottery-app-main/src/Component/modalDetail.js",["386","387","388"],{"ruleId":"389","severity":1,"message":"390","line":4,"column":8,"nodeType":"391","messageId":"392","endLine":4,"endColumn":11},{"ruleId":"389","severity":1,"message":"393","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":15},{"ruleId":"389","severity":1,"message":"394","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":20,"column":8,"nodeType":"391","messageId":"392","endLine":20,"endColumn":17},{"ruleId":"389","severity":1,"message":"396","line":21,"column":8,"nodeType":"391","messageId":"392","endLine":21,"endColumn":14},{"ruleId":"389","severity":1,"message":"397","line":86,"column":12,"nodeType":"391","messageId":"392","endLine":86,"endColumn":20},{"ruleId":"389","severity":1,"message":"398","line":86,"column":22,"nodeType":"391","messageId":"392","endLine":86,"endColumn":33},{"ruleId":"389","severity":1,"message":"399","line":87,"column":12,"nodeType":"391","messageId":"392","endLine":87,"endColumn":20},{"ruleId":"389","severity":1,"message":"400","line":90,"column":12,"nodeType":"391","messageId":"392","endLine":90,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":99,"column":15,"nodeType":"403","endLine":106,"endColumn":6},{"ruleId":"401","severity":1,"message":"404","line":106,"column":8,"nodeType":"405","endLine":106,"endColumn":10,"suggestions":"406"},{"ruleId":"401","severity":1,"message":"407","line":119,"column":8,"nodeType":"405","endLine":119,"endColumn":21,"suggestions":"408"},{"ruleId":"389","severity":1,"message":"409","line":135,"column":11,"nodeType":"391","messageId":"392","endLine":135,"endColumn":25},{"ruleId":"410","severity":1,"message":"411","line":7,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":6},{"ruleId":"414","severity":1,"message":"415","line":22,"column":21,"nodeType":"416","endLine":22,"endColumn":25},{"ruleId":"389","severity":1,"message":"417","line":3,"column":8,"nodeType":"391","messageId":"392","endLine":3,"endColumn":9},{"ruleId":"418","severity":1,"message":"419","line":89,"column":9,"nodeType":"420","endLine":89,"endColumn":32},{"ruleId":"418","severity":1,"message":"419","line":98,"column":9,"nodeType":"420","endLine":98,"endColumn":32},{"ruleId":"421","severity":1,"message":"422","line":121,"column":22,"nodeType":"423","messageId":"424","endLine":121,"endColumn":24},{"ruleId":"389","severity":1,"message":"425","line":124,"column":13,"nodeType":"391","messageId":"392","endLine":124,"endColumn":14},{"ruleId":"418","severity":1,"message":"419","line":134,"column":17,"nodeType":"420","endLine":134,"endColumn":34},{"ruleId":"389","severity":1,"message":"417","line":2,"column":8,"nodeType":"391","messageId":"392","endLine":2,"endColumn":9},{"ruleId":"418","severity":1,"message":"419","line":40,"column":9,"nodeType":"420","endLine":40,"endColumn":32},{"ruleId":"418","severity":1,"message":"419","line":45,"column":9,"nodeType":"420","endLine":45,"endColumn":37},{"ruleId":"421","severity":1,"message":"422","line":84,"column":22,"nodeType":"423","messageId":"424","endLine":84,"endColumn":24},{"ruleId":"418","severity":1,"message":"419","line":93,"column":17,"nodeType":"420","endLine":93,"endColumn":34},{"ruleId":"389","severity":1,"message":"426","line":15,"column":3,"nodeType":"391","messageId":"392","endLine":15,"endColumn":11},{"ruleId":"389","severity":1,"message":"427","line":5,"column":22,"nodeType":"391","messageId":"392","endLine":5,"endColumn":27},{"ruleId":"421","severity":1,"message":"428","line":59,"column":33,"nodeType":"423","messageId":"424","endLine":59,"endColumn":35},{"ruleId":"421","severity":1,"message":"428","line":69,"column":37,"nodeType":"423","messageId":"424","endLine":69,"endColumn":39},{"ruleId":"418","severity":1,"message":"419","line":75,"column":25,"nodeType":"420","endLine":75,"endColumn":44},{"ruleId":"389","severity":1,"message":"394","line":18,"column":8,"nodeType":"391","messageId":"392","endLine":18,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":75,"column":13,"nodeType":"403","endLine":79,"endColumn":4},{"ruleId":"401","severity":1,"message":"429","line":79,"column":6,"nodeType":"405","endLine":79,"endColumn":8,"suggestions":"430"},{"ruleId":"401","severity":1,"message":"402","line":81,"column":13,"nodeType":"403","endLine":85,"endColumn":4},{"ruleId":"401","severity":1,"message":"431","line":85,"column":6,"nodeType":"405","endLine":85,"endColumn":24,"suggestions":"432"},{"ruleId":"401","severity":1,"message":"407","line":96,"column":6,"nodeType":"405","endLine":96,"endColumn":19,"suggestions":"433"},{"ruleId":"389","severity":1,"message":"434","line":100,"column":11,"nodeType":"391","messageId":"392","endLine":100,"endColumn":15},{"ruleId":"389","severity":1,"message":"394","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":20,"column":8,"nodeType":"391","messageId":"392","endLine":20,"endColumn":17},{"ruleId":"389","severity":1,"message":"397","line":61,"column":10,"nodeType":"391","messageId":"392","endLine":61,"endColumn":18},{"ruleId":"389","severity":1,"message":"398","line":61,"column":20,"nodeType":"391","messageId":"392","endLine":61,"endColumn":31},{"ruleId":"389","severity":1,"message":"399","line":62,"column":10,"nodeType":"391","messageId":"392","endLine":62,"endColumn":18},{"ruleId":"389","severity":1,"message":"400","line":65,"column":10,"nodeType":"391","messageId":"392","endLine":65,"endColumn":23},{"ruleId":"401","severity":1,"message":"402","line":74,"column":13,"nodeType":"403","endLine":79,"endColumn":4},{"ruleId":"401","severity":1,"message":"407","line":91,"column":6,"nodeType":"405","endLine":91,"endColumn":19,"suggestions":"435"},{"ruleId":"389","severity":1,"message":"436","line":93,"column":9,"nodeType":"391","messageId":"392","endLine":93,"endColumn":19},{"ruleId":"389","severity":1,"message":"409","line":121,"column":9,"nodeType":"391","messageId":"392","endLine":121,"endColumn":23},{"ruleId":"389","severity":1,"message":"394","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":20,"column":8,"nodeType":"391","messageId":"392","endLine":20,"endColumn":17},{"ruleId":"389","severity":1,"message":"437","line":61,"column":10,"nodeType":"391","messageId":"392","endLine":61,"endColumn":20},{"ruleId":"389","severity":1,"message":"438","line":61,"column":22,"nodeType":"391","messageId":"392","endLine":61,"endColumn":35},{"ruleId":"389","severity":1,"message":"397","line":64,"column":10,"nodeType":"391","messageId":"392","endLine":64,"endColumn":18},{"ruleId":"389","severity":1,"message":"398","line":64,"column":20,"nodeType":"391","messageId":"392","endLine":64,"endColumn":31},{"ruleId":"389","severity":1,"message":"399","line":65,"column":10,"nodeType":"391","messageId":"392","endLine":65,"endColumn":18},{"ruleId":"389","severity":1,"message":"400","line":68,"column":10,"nodeType":"391","messageId":"392","endLine":68,"endColumn":23},{"ruleId":"401","severity":1,"message":"402","line":81,"column":13,"nodeType":"403","endLine":87,"endColumn":4},{"ruleId":"401","severity":1,"message":"439","line":87,"column":6,"nodeType":"405","endLine":87,"endColumn":8,"suggestions":"440"},{"ruleId":"401","severity":1,"message":"402","line":89,"column":13,"nodeType":"403","endLine":95,"endColumn":4},{"ruleId":"401","severity":1,"message":"407","line":110,"column":6,"nodeType":"405","endLine":110,"endColumn":19,"suggestions":"441"},{"ruleId":"389","severity":1,"message":"409","line":140,"column":9,"nodeType":"391","messageId":"392","endLine":140,"endColumn":23},{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","replacedBy":"445"},{"ruleId":"442","replacedBy":"446"},{"ruleId":"444","replacedBy":"447"},{"ruleId":"389","severity":1,"message":"426","line":15,"column":3,"nodeType":"391","messageId":"392","endLine":15,"endColumn":11},{"ruleId":"410","severity":1,"message":"411","line":7,"column":5,"nodeType":"412","messageId":"413","endLine":9,"endColumn":6},{"ruleId":"414","severity":1,"message":"415","line":22,"column":21,"nodeType":"416","endLine":22,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":4,"column":8,"nodeType":"391","messageId":"392","endLine":4,"endColumn":11},{"ruleId":"389","severity":1,"message":"393","line":7,"column":8,"nodeType":"391","messageId":"392","endLine":7,"endColumn":15},{"ruleId":"389","severity":1,"message":"394","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":20,"column":8,"nodeType":"391","messageId":"392","endLine":20,"endColumn":17},{"ruleId":"389","severity":1,"message":"396","line":21,"column":8,"nodeType":"391","messageId":"392","endLine":21,"endColumn":14},{"ruleId":"389","severity":1,"message":"397","line":86,"column":12,"nodeType":"391","messageId":"392","endLine":86,"endColumn":20},{"ruleId":"389","severity":1,"message":"398","line":86,"column":22,"nodeType":"391","messageId":"392","endLine":86,"endColumn":33},{"ruleId":"389","severity":1,"message":"399","line":87,"column":12,"nodeType":"391","messageId":"392","endLine":87,"endColumn":20},{"ruleId":"389","severity":1,"message":"400","line":90,"column":12,"nodeType":"391","messageId":"392","endLine":90,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":99,"column":15,"nodeType":"403","endLine":106,"endColumn":6},{"ruleId":"401","severity":1,"message":"404","line":106,"column":8,"nodeType":"405","endLine":106,"endColumn":10,"suggestions":"448"},{"ruleId":"401","severity":1,"message":"407","line":119,"column":8,"nodeType":"405","endLine":119,"endColumn":21,"suggestions":"449"},{"ruleId":"389","severity":1,"message":"409","line":135,"column":11,"nodeType":"391","messageId":"392","endLine":135,"endColumn":25},{"ruleId":"389","severity":1,"message":"417","line":3,"column":8,"nodeType":"391","messageId":"392","endLine":3,"endColumn":9},{"ruleId":"421","severity":1,"message":"428","line":42,"column":41,"nodeType":"423","messageId":"424","endLine":42,"endColumn":43},{"ruleId":"421","severity":1,"message":"428","line":42,"column":96,"nodeType":"423","messageId":"424","endLine":42,"endColumn":98},{"ruleId":"418","severity":1,"message":"419","line":58,"column":25,"nodeType":"420","endLine":58,"endColumn":42},{"ruleId":"421","severity":1,"message":"422","line":107,"column":65,"nodeType":"423","messageId":"424","endLine":107,"endColumn":67},{"ruleId":"418","severity":1,"message":"419","line":120,"column":9,"nodeType":"420","endLine":120,"endColumn":32},{"ruleId":"418","severity":1,"message":"419","line":125,"column":9,"nodeType":"420","endLine":125,"endColumn":32},{"ruleId":"421","severity":1,"message":"422","line":178,"column":68,"nodeType":"423","messageId":"424","endLine":178,"endColumn":70},{"ruleId":"421","severity":1,"message":"422","line":61,"column":20,"nodeType":"423","messageId":"424","endLine":61,"endColumn":22},{"ruleId":"421","severity":1,"message":"422","line":61,"column":43,"nodeType":"423","messageId":"424","endLine":61,"endColumn":45},{"ruleId":"421","severity":1,"message":"422","line":65,"column":20,"nodeType":"423","messageId":"424","endLine":65,"endColumn":22},{"ruleId":"421","severity":1,"message":"422","line":68,"column":27,"nodeType":"423","messageId":"424","endLine":68,"endColumn":29},{"ruleId":"389","severity":1,"message":"394","line":18,"column":8,"nodeType":"391","messageId":"392","endLine":18,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":75,"column":13,"nodeType":"403","endLine":79,"endColumn":4},{"ruleId":"401","severity":1,"message":"429","line":79,"column":6,"nodeType":"405","endLine":79,"endColumn":8,"suggestions":"450"},{"ruleId":"401","severity":1,"message":"402","line":81,"column":13,"nodeType":"403","endLine":85,"endColumn":4},{"ruleId":"401","severity":1,"message":"431","line":85,"column":6,"nodeType":"405","endLine":85,"endColumn":24,"suggestions":"451"},{"ruleId":"401","severity":1,"message":"407","line":96,"column":6,"nodeType":"405","endLine":96,"endColumn":19,"suggestions":"452"},{"ruleId":"389","severity":1,"message":"434","line":100,"column":11,"nodeType":"391","messageId":"392","endLine":100,"endColumn":15},{"ruleId":"389","severity":1,"message":"394","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":20,"column":8,"nodeType":"391","messageId":"392","endLine":20,"endColumn":17},{"ruleId":"389","severity":1,"message":"397","line":61,"column":10,"nodeType":"391","messageId":"392","endLine":61,"endColumn":18},{"ruleId":"389","severity":1,"message":"398","line":61,"column":20,"nodeType":"391","messageId":"392","endLine":61,"endColumn":31},{"ruleId":"389","severity":1,"message":"399","line":62,"column":10,"nodeType":"391","messageId":"392","endLine":62,"endColumn":18},{"ruleId":"389","severity":1,"message":"400","line":65,"column":10,"nodeType":"391","messageId":"392","endLine":65,"endColumn":23},{"ruleId":"401","severity":1,"message":"402","line":74,"column":13,"nodeType":"403","endLine":79,"endColumn":4},{"ruleId":"401","severity":1,"message":"407","line":91,"column":6,"nodeType":"405","endLine":91,"endColumn":19,"suggestions":"453"},{"ruleId":"389","severity":1,"message":"436","line":93,"column":9,"nodeType":"391","messageId":"392","endLine":93,"endColumn":19},{"ruleId":"389","severity":1,"message":"409","line":121,"column":9,"nodeType":"391","messageId":"392","endLine":121,"endColumn":23},{"ruleId":"389","severity":1,"message":"394","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":20,"column":8,"nodeType":"391","messageId":"392","endLine":20,"endColumn":17},{"ruleId":"389","severity":1,"message":"437","line":61,"column":10,"nodeType":"391","messageId":"392","endLine":61,"endColumn":20},{"ruleId":"389","severity":1,"message":"438","line":61,"column":22,"nodeType":"391","messageId":"392","endLine":61,"endColumn":35},{"ruleId":"389","severity":1,"message":"397","line":64,"column":10,"nodeType":"391","messageId":"392","endLine":64,"endColumn":18},{"ruleId":"389","severity":1,"message":"398","line":64,"column":20,"nodeType":"391","messageId":"392","endLine":64,"endColumn":31},{"ruleId":"389","severity":1,"message":"399","line":65,"column":10,"nodeType":"391","messageId":"392","endLine":65,"endColumn":18},{"ruleId":"389","severity":1,"message":"400","line":68,"column":10,"nodeType":"391","messageId":"392","endLine":68,"endColumn":23},{"ruleId":"401","severity":1,"message":"402","line":81,"column":13,"nodeType":"403","endLine":87,"endColumn":4},{"ruleId":"401","severity":1,"message":"439","line":87,"column":6,"nodeType":"405","endLine":87,"endColumn":8,"suggestions":"454"},{"ruleId":"401","severity":1,"message":"402","line":89,"column":13,"nodeType":"403","endLine":95,"endColumn":4},{"ruleId":"401","severity":1,"message":"407","line":110,"column":6,"nodeType":"405","endLine":110,"endColumn":19,"suggestions":"455"},{"ruleId":"389","severity":1,"message":"409","line":140,"column":9,"nodeType":"391","messageId":"392","endLine":140,"endColumn":23},{"ruleId":"389","severity":1,"message":"427","line":7,"column":22,"nodeType":"391","messageId":"392","endLine":7,"endColumn":27},{"ruleId":"389","severity":1,"message":"456","line":55,"column":15,"nodeType":"391","messageId":"392","endLine":55,"endColumn":18},{"ruleId":"389","severity":1,"message":"457","line":78,"column":15,"nodeType":"391","messageId":"392","endLine":78,"endColumn":18},{"ruleId":"458","severity":1,"message":"459","line":78,"column":43,"nodeType":"403","messageId":"460","endLine":78,"endColumn":45},{"ruleId":"421","severity":1,"message":"422","line":81,"column":58,"nodeType":"423","messageId":"424","endLine":81,"endColumn":60},{"ruleId":"421","severity":1,"message":"422","line":81,"column":74,"nodeType":"423","messageId":"424","endLine":81,"endColumn":76},{"ruleId":"458","severity":1,"message":"461","line":83,"column":17,"nodeType":"462","messageId":"463","endLine":83,"endColumn":23},{"ruleId":"458","severity":1,"message":"461","line":87,"column":17,"nodeType":"462","messageId":"463","endLine":87,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":91,"column":82,"nodeType":"423","messageId":"424","endLine":91,"endColumn":84},{"ruleId":"421","severity":1,"message":"422","line":92,"column":25,"nodeType":"423","messageId":"424","endLine":92,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":93,"column":36,"nodeType":"423","messageId":"424","endLine":93,"endColumn":38},{"ruleId":"421","severity":1,"message":"422","line":93,"column":69,"nodeType":"423","messageId":"424","endLine":93,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":93,"column":102,"nodeType":"423","messageId":"424","endLine":93,"endColumn":104},{"ruleId":"421","severity":1,"message":"422","line":93,"column":135,"nodeType":"423","messageId":"424","endLine":93,"endColumn":137},{"ruleId":"421","severity":1,"message":"422","line":93,"column":168,"nodeType":"423","messageId":"424","endLine":93,"endColumn":170},{"ruleId":"421","severity":1,"message":"422","line":95,"column":84,"nodeType":"423","messageId":"424","endLine":95,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":95,"column":109,"nodeType":"423","messageId":"424","endLine":95,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":98,"column":41,"nodeType":"423","messageId":"424","endLine":98,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":98,"column":74,"nodeType":"423","messageId":"424","endLine":98,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":98,"column":107,"nodeType":"423","messageId":"424","endLine":98,"endColumn":109},{"ruleId":"421","severity":1,"message":"422","line":98,"column":140,"nodeType":"423","messageId":"424","endLine":98,"endColumn":142},{"ruleId":"421","severity":1,"message":"422","line":100,"column":84,"nodeType":"423","messageId":"424","endLine":100,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":100,"column":109,"nodeType":"423","messageId":"424","endLine":100,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":103,"column":41,"nodeType":"423","messageId":"424","endLine":103,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":103,"column":74,"nodeType":"423","messageId":"424","endLine":103,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":103,"column":107,"nodeType":"423","messageId":"424","endLine":103,"endColumn":109},{"ruleId":"421","severity":1,"message":"422","line":105,"column":84,"nodeType":"423","messageId":"424","endLine":105,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":105,"column":109,"nodeType":"423","messageId":"424","endLine":105,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":108,"column":41,"nodeType":"423","messageId":"424","endLine":108,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":108,"column":74,"nodeType":"423","messageId":"424","endLine":108,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":110,"column":84,"nodeType":"423","messageId":"424","endLine":110,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":110,"column":109,"nodeType":"423","messageId":"424","endLine":110,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":113,"column":41,"nodeType":"423","messageId":"424","endLine":113,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":115,"column":84,"nodeType":"423","messageId":"424","endLine":115,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":115,"column":109,"nodeType":"423","messageId":"424","endLine":115,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":120,"column":25,"nodeType":"423","messageId":"424","endLine":120,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":121,"column":36,"nodeType":"423","messageId":"424","endLine":121,"endColumn":38},{"ruleId":"421","severity":1,"message":"422","line":121,"column":69,"nodeType":"423","messageId":"424","endLine":121,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":121,"column":102,"nodeType":"423","messageId":"424","endLine":121,"endColumn":104},{"ruleId":"421","severity":1,"message":"422","line":121,"column":135,"nodeType":"423","messageId":"424","endLine":121,"endColumn":137},{"ruleId":"421","severity":1,"message":"422","line":123,"column":84,"nodeType":"423","messageId":"424","endLine":123,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":123,"column":109,"nodeType":"423","messageId":"424","endLine":123,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":126,"column":41,"nodeType":"423","messageId":"424","endLine":126,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":126,"column":74,"nodeType":"423","messageId":"424","endLine":126,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":126,"column":107,"nodeType":"423","messageId":"424","endLine":126,"endColumn":109},{"ruleId":"421","severity":1,"message":"422","line":128,"column":84,"nodeType":"423","messageId":"424","endLine":128,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":128,"column":109,"nodeType":"423","messageId":"424","endLine":128,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":131,"column":41,"nodeType":"423","messageId":"424","endLine":131,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":131,"column":74,"nodeType":"423","messageId":"424","endLine":131,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":133,"column":84,"nodeType":"423","messageId":"424","endLine":133,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":133,"column":109,"nodeType":"423","messageId":"424","endLine":133,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":136,"column":41,"nodeType":"423","messageId":"424","endLine":136,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":138,"column":84,"nodeType":"423","messageId":"424","endLine":138,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":138,"column":109,"nodeType":"423","messageId":"424","endLine":138,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":143,"column":25,"nodeType":"423","messageId":"424","endLine":143,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":144,"column":36,"nodeType":"423","messageId":"424","endLine":144,"endColumn":38},{"ruleId":"421","severity":1,"message":"422","line":144,"column":69,"nodeType":"423","messageId":"424","endLine":144,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":146,"column":84,"nodeType":"423","messageId":"424","endLine":146,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":146,"column":109,"nodeType":"423","messageId":"424","endLine":146,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":149,"column":41,"nodeType":"423","messageId":"424","endLine":149,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":149,"column":74,"nodeType":"423","messageId":"424","endLine":149,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":151,"column":84,"nodeType":"423","messageId":"424","endLine":151,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":151,"column":109,"nodeType":"423","messageId":"424","endLine":151,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":154,"column":41,"nodeType":"423","messageId":"424","endLine":154,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":154,"column":74,"nodeType":"423","messageId":"424","endLine":154,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":156,"column":84,"nodeType":"423","messageId":"424","endLine":156,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":156,"column":109,"nodeType":"423","messageId":"424","endLine":156,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":161,"column":25,"nodeType":"423","messageId":"424","endLine":161,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":162,"column":36,"nodeType":"423","messageId":"424","endLine":162,"endColumn":38},{"ruleId":"421","severity":1,"message":"422","line":164,"column":84,"nodeType":"423","messageId":"424","endLine":164,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":164,"column":109,"nodeType":"423","messageId":"424","endLine":164,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":167,"column":41,"nodeType":"423","messageId":"424","endLine":167,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":169,"column":84,"nodeType":"423","messageId":"424","endLine":169,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":169,"column":109,"nodeType":"423","messageId":"424","endLine":169,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":172,"column":41,"nodeType":"423","messageId":"424","endLine":172,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":174,"column":84,"nodeType":"423","messageId":"424","endLine":174,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":174,"column":109,"nodeType":"423","messageId":"424","endLine":174,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":180,"column":36,"nodeType":"423","messageId":"424","endLine":180,"endColumn":38},{"ruleId":"421","severity":1,"message":"422","line":180,"column":69,"nodeType":"423","messageId":"424","endLine":180,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":180,"column":102,"nodeType":"423","messageId":"424","endLine":180,"endColumn":104},{"ruleId":"421","severity":1,"message":"422","line":182,"column":84,"nodeType":"423","messageId":"424","endLine":182,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":182,"column":109,"nodeType":"423","messageId":"424","endLine":182,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":185,"column":41,"nodeType":"423","messageId":"424","endLine":185,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":185,"column":74,"nodeType":"423","messageId":"424","endLine":185,"endColumn":76},{"ruleId":"421","severity":1,"message":"422","line":187,"column":84,"nodeType":"423","messageId":"424","endLine":187,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":187,"column":109,"nodeType":"423","messageId":"424","endLine":187,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":190,"column":41,"nodeType":"423","messageId":"424","endLine":190,"endColumn":43},{"ruleId":"421","severity":1,"message":"422","line":192,"column":84,"nodeType":"423","messageId":"424","endLine":192,"endColumn":86},{"ruleId":"421","severity":1,"message":"422","line":192,"column":109,"nodeType":"423","messageId":"424","endLine":192,"endColumn":111},{"ruleId":"421","severity":1,"message":"422","line":199,"column":44,"nodeType":"423","messageId":"424","endLine":199,"endColumn":46},{"ruleId":"458","severity":1,"message":"461","line":200,"column":38,"nodeType":"403","messageId":"464","endLine":200,"endColumn":40},{"ruleId":"421","severity":1,"message":"422","line":201,"column":46,"nodeType":"423","messageId":"424","endLine":201,"endColumn":48},{"ruleId":"421","severity":1,"message":"428","line":252,"column":33,"nodeType":"423","messageId":"424","endLine":252,"endColumn":35},{"ruleId":"421","severity":1,"message":"428","line":262,"column":37,"nodeType":"423","messageId":"424","endLine":262,"endColumn":39},{"ruleId":"418","severity":1,"message":"419","line":267,"column":25,"nodeType":"420","endLine":267,"endColumn":44},{"ruleId":"458","severity":1,"message":"461","line":287,"column":38,"nodeType":"403","messageId":"464","endLine":287,"endColumn":40},{"ruleId":"389","severity":1,"message":"465","line":36,"column":7,"nodeType":"391","messageId":"392","endLine":36,"endColumn":11},{"ruleId":"389","severity":1,"message":"466","line":51,"column":9,"nodeType":"391","messageId":"392","endLine":51,"endColumn":16},{"ruleId":"421","severity":1,"message":"422","line":88,"column":49,"nodeType":"423","messageId":"424","endLine":88,"endColumn":51},{"ruleId":"421","severity":1,"message":"422","line":90,"column":49,"nodeType":"423","messageId":"424","endLine":90,"endColumn":51},{"ruleId":"389","severity":1,"message":"466","line":40,"column":9,"nodeType":"391","messageId":"392","endLine":40,"endColumn":16},{"ruleId":"389","severity":1,"message":"467","line":44,"column":9,"nodeType":"391","messageId":"392","endLine":44,"endColumn":28},{"ruleId":"389","severity":1,"message":"468","line":48,"column":9,"nodeType":"391","messageId":"392","endLine":48,"endColumn":15},"no-unused-vars","'env' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","'DialogContentText' is defined but never used.","'TextField' is defined but never used.","'moment' is defined but never used.","'editData' is assigned a value but never used.","'setEditData' is assigned a value but never used.","'readOnly' is assigned a value but never used.","'ticketLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'props.user' and 'rowsPerPage'. Either include them or remove the dependency array. You can also do a functional update 'setRowsPerPage(r => ...)' if you only need 'rowsPerPage' in the 'setRowsPerPage' call.","ArrayExpression",["469"],"React Hook useEffect has a missing dependency: 'userPagination'. Either include it or remove the dependency array.",["470"],"'changeReadonly' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'_' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'i' is assigned a value but never used.","'Redirect' is defined but never used.","'Space' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'page', 'props.searchName', and 'rowsPerPage'. Either include them or remove the dependency array.",["471"],"React Hook useEffect has missing dependencies: 'page' and 'rowsPerPage'. Either include them or remove the dependency array.",["472"],["473"],"'data' is assigned a value but never used.",["474"],"'updateUser' is assigned a value but never used.","'searchName' is assigned a value but never used.","'setSearchName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.searchName'. Either include it or remove the dependency array.",["475"],["476"],"no-native-reassign",["477"],"no-negated-in-lhs",["478"],["477"],["478"],["479"],["480"],["481"],["482"],["483"],["484"],["485"],["486"],"'bal' is assigned a value but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'rows' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleWinningNumber' is assigned a value but never used.","'submit' is assigned a value but never used.",{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"491","fix":"493"},{"desc":"489","fix":"494"},{"desc":"489","fix":"495"},{"desc":"496","fix":"497"},{"desc":"489","fix":"498"},"no-global-assign","no-unsafe-negation",{"desc":"487","fix":"499"},{"desc":"489","fix":"500"},{"desc":"491","fix":"501"},{"desc":"491","fix":"502"},{"desc":"489","fix":"503"},{"desc":"489","fix":"504"},{"desc":"496","fix":"505"},{"desc":"489","fix":"506"},"Update the dependencies array to be: [props.user, rowsPerPage]",{"range":"507","text":"508"},"Update the dependencies array to be: [rowsPerPage, userPagination]",{"range":"509","text":"510"},"Update the dependencies array to be: [page, props.searchName, rowsPerPage]",{"range":"511","text":"512"},{"range":"513","text":"512"},{"range":"514","text":"510"},{"range":"515","text":"510"},"Update the dependencies array to be: [props.searchName]",{"range":"516","text":"517"},{"range":"518","text":"510"},{"range":"519","text":"508"},{"range":"520","text":"510"},{"range":"521","text":"512"},{"range":"522","text":"512"},{"range":"523","text":"510"},{"range":"524","text":"510"},{"range":"525","text":"517"},{"range":"526","text":"510"},[3623,3625],"[props.user, rowsPerPage]",[4186,4199],"[rowsPerPage, userPagination]",[2531,2533],"[page, props.searchName, rowsPerPage]",[2770,2788],[3199,3212],[3106,3119],[2789,2791],"[props.searchName]",[3587,3600],[3623,3625],[4186,4199],[2531,2533],[2770,2788],[3199,3212],[3106,3119],[2789,2791],[3587,3600]]